<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Prototypes on Pete Dimitrov&#39;s Blog</title>
        <link>https://petedimitrovart.com/categories/prototypes/</link>
        <description>Recent content in Prototypes on Pete Dimitrov&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 18 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://petedimitrovart.com/categories/prototypes/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>The Amarantos Ritual - 01 - Beginning</title>
        <link>https://petedimitrovart.com/p/amarantos-001/</link>
        <pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/amarantos-001/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/amarantos-001/amarantos001c.jpg" alt="Featured image of post The Amarantos Ritual - 01 - Beginning" /&gt;&lt;h2 id=&#34;foreword&#34;&gt;Foreword&lt;/h2&gt;
&lt;p&gt;Over the last nine months I&amp;rsquo;ve been slowly developing my latest environment scene. It&amp;rsquo;s process documented both in writing and in work-in-progress images has been scattered across my social channels. I&amp;rsquo;ve got a lot of positive comments and encouragement a long the way by some wonderful people. Some of you, dear readers, might have even seen the project and the aforementioned images already. I wanted to still pull it all together, so to speak, into one condensed place. Tie up the scattered posts and ends.&lt;/p&gt;
&lt;p&gt;In that tie up, I hope for some of you to find inspiration. Others I hope find insight and resources towards what and how I set to accomplish the things I have in my scene.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos001.jpg&#34;
	width=&#34;3840&#34;
	height=&#34;2320&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 5 screenshot. A mannequin in an A pose is facing four floating, large primitives. Between those is a fuzzy orb in a liquid metal appearance. It grows in an overpowering reds, oranges and yellows. It&amp;rsquo;s emission is picked up in real time through Lumen and casts light on the floating primitives next to it.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;397px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Above is the first screenshot I took inside the environment scene. An orange, abstract, floating, orb. This had been an experiment of importing an animated orb directly from Houdini.&lt;/p&gt;
&lt;h2 id=&#34;project-beginning&#34;&gt;Project Beginning&lt;/h2&gt;
&lt;p&gt;In March 2022 I was experimenting with a small game prototype I had started in Unreal Engine 4. It was a topdown camera RPG with lots of spells and action. I never got to the part of prototyping much of this &amp;ldquo;action&amp;rdquo; but I did blueprint a lot of the initial movement, camera work, and then also had started on a few spells and abilities.&lt;/p&gt;
&lt;p&gt;I won&amp;rsquo;t exactly be going into details about the prototype itself as that would call for another long post of its own, and would branch us away from the topic of this current scene. The context important to the start of this environment is that in early July 2022, after creating the initial Blueprints foundation for a few abilities inside the game, I set off to learn and experiment with Houdini.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos002.jpg&#34;
	width=&#34;3840&#34;
	height=&#34;2320&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from an UE4 game prototype. Gray, checkerboard landscape, seen from above, in a Diablo style camera. Few paths with a yellow tinted placeholer material connect to one another. In the middle of a screen is the player character. Up and right from her is a well prop with a mysterious red glow.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;397px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The thought process behind getting into Houdini was that I wanted to create some spells VFX and animations. But the idea I had in mind was for fluidity and smooth movement, one that would be accomplished through fluid simulations. Yet for obvious performance and scaling reasons I could not get into creating actual real time fluid simulations (not that I have the knowledge to do that even if there is a way to scale it performance wise [I bet there is, smart people out there certainly have accomplished it]).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos003.jpg&#34;
	width=&#34;3840&#34;
	height=&#34;2320&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot from the prototype. The player character is in the middle and around them are floating orbs. Some are smooth and red in appearance. Like blood. Other copper and blue silver, looking like liquid metal.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;397px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;These orbs above are my initial Houdini experiments, as seen imported inside my UE4 game prototype. They have a looping animation attached to them. You can see preview of it further down in this post in some of the YouTube embeds.&lt;/p&gt;
&lt;h2 id=&#34;vertex-animation-textures&#34;&gt;Vertex Animation Textures&lt;/h2&gt;
&lt;p&gt;In the years prior I had heard a lot about the technique of baking down animations in vertex look-up tables. Those end up in the form of a bitmap that then is read from a shader in order to tell each triangle of the mesh how and where to move to. Interpolate between those different key &amp;ldquo;positions&amp;rdquo; on the texture and you get an animation (this is an incredibly oversimplified explanation, apologies to anyone that might be reading it and happen to be the type of Tech Artist to implement these amazing things from the absolute scratch!).&lt;/p&gt;
&lt;p&gt;This type of technique is called Vertex Animation Textures &lt;a class=&#34;link&#34; href=&#34;https://www.sidefx.com/tutorials/vertex-animation-textures-for-unreal/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(VAT)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Animations in the form of VAT have one incredible advantage over other type of game animations: it&amp;rsquo;s entirely driven in a shader. Onto the GPU. We don&amp;rsquo;t use or deploy any types of bones or skeletons and as such any object you animate in this way can end up as a Static Mesh. The animation, as I mentioned, then happens on the GPU through the reading of the vertex look-up table texture.&lt;/p&gt;
&lt;p&gt;There is memory footprint, of course. It comes in the form of the quite oversized in width and height look-up textures (which makes them have large file sizes). Also for a smooth and interesting &amp;ldquo;fluid&amp;rdquo; like animation, your Static Mesh might end up being quite rich on polycount too.&lt;/p&gt;
&lt;h2 id=&#34;vat-demonstration&#34;&gt;VAT Demonstration&lt;/h2&gt;
&lt;p&gt;In this first picture you can see a fuzzy ball mesh I created parametrically in Houdini.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos004.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;1130&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Houdini screenshot. UI of the software is seen and in the left viewport one can inspect the fuzzy orb mesh.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;407px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I then imported that mesh inside Unreal 4. I didn&amp;rsquo;t export it from Houdini as an ordinary static geometry. Instead I exported it as a VAT and in Unreal used a SideFX plugin and shader.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos005.jpg&#34;
	width=&#34;1420&#34;
	height=&#34;980&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 4 screenshot. Viewport look of the fuzzy orb mesh. It looks whole, top side reads &amp;ldquo;24,898 triangles&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;144&#34;
		data-flex-basis=&#34;347px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;But that orb, seen appearing like a proper mesh, is after the SideFX shader for reading VATs has been applied. If we ignore that shader and take a look at the geometry that the VAT exports, without material graph or the vertex look-up table textures that are generated, this is how it looks:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos006.jpg&#34;
	width=&#34;1420&#34;
	height=&#34;977&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another Unreal 4 screenshot. The same orb mesh seen above looked at again. Now the shader is not used and as such we see it as a giant, 3D matrix collection of triangles scattered in space.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;348px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As mentioned already, image above is orb imported in Unreal but no VAT textures are applied yet. As such its a collection of what to us appears like arbitrary placed triangles.&lt;/p&gt;
&lt;h2 id=&#34;useful-vats&#34;&gt;Useful VATs&lt;/h2&gt;
&lt;p&gt;Why use VATs in the first place?&lt;/p&gt;
&lt;p&gt;When we try to animate, say hundreds or thousands of actors onto the scene, all visible, even if they are incredibly low-poly, and use no complex textures to drag down our texture streaming budget, we often will still hit performance issues and hardly have any low MS (high FPS).&lt;/p&gt;
&lt;p&gt;One of the reasons for that is because when we display on the screen actors like that, ones with skeleton rig animations, they each end up being a separate draw call. Those draw calls go through the CPU and as such we end up being bound on CPU before we even get to use much of the potential that our GPU has.&lt;/p&gt;
&lt;p&gt;As such the VAT is a trade-off where we might increase slightly the polycount, increase the use of textures budged, but end up with incredibly optimized amount of draw calls. The orbs you see above, I could render 100-200 of them in the scene, visible from one camera angle at all time, and still have low MS and good performance.&lt;/p&gt;
&lt;h2 id=&#34;animation&#34;&gt;Animation&lt;/h2&gt;
&lt;p&gt;In addition to the above, there is also the more obvious part. It&amp;rsquo;s the content of the animations. In Houdini I wanted to make some fluids like sims that I could perhaps pull of through a shader in Unreal entirely. It would require of me to offset my orb surfaces with World Position Offset to give it a fuzzy, liquid like movement on its surface. But then if I wanted the visual to look proper and as cool as the ones in the VATs it would mean I need to recalculate my normals as well so light bounces off those WPO surface movements correctly.&lt;/p&gt;
&lt;p&gt;I think I will give a go at recalculating normals and making a shader like that at some point in Unreal. But for now I wanted to use the opportunity to learn fluid sims in Houdini and then learn VATs.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/5amuf5ohSr0&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above, showcasing an orb with fluid like movement animation.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The animation, seen after VAT import in Unreal. In this video below, the VAT shader is from SideFX but I have added control over Albedo, and Emission and I&amp;rsquo;ve plugged in a Fresnel function. It gives it the glowing effect.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/SpGjcXyuz6A&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above, showcasing the VAT orbs but in UE5. These are now shaded and have more refined visuals.)&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Frankly, I found all of the above incredibly interesting and fascinating, even before I dived to learn the nitty-gritty of it all. I am not really a VFX artist or an animator. But I do have a love for Tech Art (even if I&amp;rsquo;m not a Tech Art in my fulltime studio job either!). My setting off into making these type of fluid like animations for my spells came in big chunk through the motivation of me wanting to see if I have in me what it takes to learn and deploy these techniques.&lt;/p&gt;
&lt;p&gt;It turned out I did. To no one surprise because as we usually do when it comes to most tooling and software in the games industry, we stand on the shoulders of those who came before us and concepted, created then implemented the techniques. A chorus of ingenious people.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m saying this because after all of the descriptions above that might sound incredibly complicated to those of you who have not yet experimented or learnt this type of stuff, you might be left with the misconception that this is incredibly hard to create.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s indeed not as complicated as it sounds. The biggest challenge I faced in learning Houdini was how to actually come up with my initial orb animation. When I did that, the moment I wanted to turn the anim timeline into a VAT and import it into Unreal, I had a bunch of tools already created for us by SideFX.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t need to implement or write any shader. I didn&amp;rsquo;t need to automate any export - import. Those were all already available in Houdini (better yet, they come out of the box with exporters for UE4, UE5 and Unity alike).&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;p&gt;If you are reading this and hoping of trying these type of techniques, either follow the page I linked above (&lt;a class=&#34;link&#34; href=&#34;https://www.sidefx.com/tutorials/vertex-animation-textures-for-unreal/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SideFX - VAT for Unreal&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Or follow these videos, which I followed - &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=1cPRYwF-Tvg&amp;amp;list=PLoltx0CAXYf75OzQ3H_eGboHlrrf44gsi&amp;amp;index=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VAT 4 | RBD | Unreal&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=BaKNjIC66_8&amp;amp;feature=youtu.be&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VAT 5 | Fluids | Unreal&lt;/a&gt; - though I believe those two are just mirrors of the VAT link above.&lt;/p&gt;
&lt;p&gt;Before getting into them I suggest watching some general videos of how to manipulate and animate geometry to look like its surface is changing, or even doing some fluid simulation tutorials. After all before you try to turn something into a VAT you want to make sure you have a Houdini animation ready in the first place.&lt;/p&gt;
&lt;p&gt;To create my orbs I experimented and at the end came up with a pipeline that creates geometrical primitives &amp;ndash; feeds them into Clouds &amp;ndash; feeds into VDB &amp;ndash; then VDB to Polygons. That with recalculated, smoothed normals produces results similar to the Houdini video I embedded under the &lt;strong&gt;6. Animation&lt;/strong&gt; section of this blog post.&lt;/p&gt;
&lt;p&gt;If you want to find out how to merge different orbs into an abstract structure, I recommend giving this video a go: &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=47hkcRgCgzo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=47hkcRgCgzo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s actually the one I started with. Later on, once I realized I want to try VATs, I winged it and added the &amp;ldquo;convert to clouds then convert to VDB then back to polygons&amp;rdquo; part I described above. I did that because I found that was the easiest way for me to add motion to the otherwise static orbs produced in the tutorial in the sentence above.&lt;/p&gt;
&lt;h2 id=&#34;environment-scene&#34;&gt;Environment Scene&lt;/h2&gt;
&lt;p&gt;After I had made some floating orbs and they were animating nicely inside my UE4 game prototype, of course my Environment Artist side kicked in&amp;hellip;&lt;/p&gt;
&lt;p&gt;I started to think how even though I love using this inside the game prototype, it would be very fun to try and use it inside a polished, set dressed scene.&lt;/p&gt;
&lt;p&gt;I briefly considered just creating a large, circular room inside my game itself. Then set dressing it and polishing it to a vertical slice. As if when you walk inside it you walk into a finished game environment. It wont matter if the entrance or the parts before that were placeholder and checker board.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s around the time I got this story unfolding in my mind:&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;&lt;p&gt;As the chamber shifted around them, their worship remained unmoving.&lt;/p&gt;
&lt;p&gt;Circular, repetitive room. Just a few modular pieces.
In the middle there is a shape that changes like fluid, using Houdini and VAT.
It has strong emission and perhaps could light the room entirely thanks to that and Lumen? Test it in UE5.&lt;/p&gt;
&lt;p&gt;The shape will pulse and be animated thanks to the VAT and combination of Niagara curves and wave functions.
Next to it will be in circle a number of people.&lt;/p&gt;
&lt;p&gt;They are on their knees like in a ritual worship.&lt;/p&gt;
&lt;p&gt;They move up and down their upper torso, while remaining in position, waving hands in the air.&lt;/p&gt;
&lt;p&gt;At some point the shape &amp;ldquo;glitches&amp;rdquo; into a bunch of triangles (try using a wrong Look Up Table / Textures for the VAT?).
As that happens, one of the people is lifted in the air, rotated 180 degrees and then slowly floated into the shape.&lt;/p&gt;
&lt;p&gt;The shape consumes them.&lt;/p&gt;
&lt;/p&gt;&lt;span class=&#34;cite&#34;&gt;&lt;span&gt;― &lt;/span&gt;&lt;span&gt;6 July 2022&lt;/span&gt;&lt;cite&gt;&lt;/cite&gt;&lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;When I got that story and jotted down those ideas above on paper, I knew I have to open a new scene and focus entire on that. I put my UE4 game prototype on the side shelf. I opened a new UE5 scene and started blocking out the space. The VAT Houdini orb I made would be the center piece. The jewel in the middle that I spent so much time on and learned so much through.&lt;/p&gt;
&lt;h2 id=&#34;early-scene-shot&#34;&gt;Early Scene Shot&lt;/h2&gt;
&lt;p&gt;With all of the above analyzed and described, we can now dive right into the environment side of things.&lt;/p&gt;
&lt;p&gt;After some hours of blocking out and making some initial building wall pieces in Blender, here is what I took the scene to:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-001/amarantos007.jpg&#34;
	width=&#34;3162&#34;
	height=&#34;1779&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A circular room with placeholder gray materials and strong orange glow. There is a fuzzy, liquid metal orb in the very middle. Around are pillars with ornate details on their tops. The walls have slight gaps for sci-fi-esque windows. There is a door that is slightly ajar and sunlight comes out of it. Unreal 5 screenshot&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In the next blog post in this series we will take a look at my initial reference board. We will also see the different modular pieces I made in Blender and how I went about moving them into Zbrush and sculpting having in mind my end result will be used as Nanite meshes.&lt;/p&gt;
&lt;p&gt;I hope you enjoyed this post,&lt;/p&gt;
&lt;p&gt;Pete.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-002/&#34;  title=&#34;index.md&#34;
    &gt;Go to next blog entry.&lt;/a&gt;&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        <item>
        <title>Chromosphere 03 - Visuals</title>
        <link>https://petedimitrovart.com/p/chromosphere003/</link>
        <pubDate>Sun, 24 Feb 2019 18:19:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/chromosphere003/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/chromosphere003/chromo03.jpg" alt="Featured image of post Chromosphere 03 - Visuals" /&gt;&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromo03.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;664&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from the UE4 prototype. Angle and subject is similar to the shots in the previous posts. Here, however, the visuals and tiles are more finalized. Big sun star to the left, throwing aggressive light on the gray tiles to the right. The light is more defined and the &amp;ldquo;shadow&amp;rdquo; areas are now much more obvious.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;462px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In the last post we mentioned the most important Blueprints we need in order to have actual gameplay. They do build the win/lose condition, but we still need one more very important element.&lt;/p&gt;
&lt;p&gt;We need what I call right now, and am going to refer to, with the word “blocks”. The blocks are the pieces that go on the environment to cast shadows here and there. The blocks are what the player is in control of, as I said way back in the first post.&lt;/p&gt;
&lt;h2 id=&#34;tetris-pieces&#34;&gt;Tetris Pieces&lt;/h2&gt;
&lt;p&gt;In the game, I have tiles, that put together create the map/surface area. Then, on top of those, go the blocks. They fit together perfectly in slots, as I need it to be visually explicit where a player is allowed to place and where they are not.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_022.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;551&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Maya screenshot of a scene with an Unreal dummy seen from far. Next to the mannequin are different style of tiles - hex, triangular, beveled and more.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;232&#34;
		data-flex-basis=&#34;557px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;First “sketch” of the shapes I did in Maya. It was a quick test to see what shape could work the best. At that point in my mind I already knew I wanted one shape repeated many times like a tile, but I still was not certain what that shape would be.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_023.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;896&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Quick photoshop drawing showcasing floating land with a giant sun next to it. There is a path painted in blue through the middle with green arrow annotations on top.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;342px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Before I did anything, I had a quick sketch, that does not look very impressive, that I made in Photoshop. It was more of a guide for the mood, that was assuring me I am going in the direction I want to.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You could probably see that the image I produced above, was what inspired me to go towards a blue starry sky, overall dark tone, and a very bright sun.&lt;/p&gt;
&lt;p&gt;You can also sort of see the path, illustrated in blue, and the idea of going from point A to point B as a main objective in the game.&lt;/p&gt;
&lt;h2 id=&#34;sun&#34;&gt;Sun&lt;/h2&gt;
&lt;p&gt;After I had figured out the visual of the tiles, and the Sun next to them, the first draft was a hollow, holographic looking star. Although I said I don’t have plenty of time to create textures and shaders (thus the tiles are textureless) I still needed to make sure the Sun has a texture. The Sun needs one, because it is a main game mechanic element. We need to be able to tell, visually, that it’s big, that it’s hot, and that it is potentially dangerous. It can’t simply be hollow. That is when I went into making a texture and some basic animation for it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_024.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;896&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Reference sheet featuring various screenshot, old paintings and images of planets, suns and stars. Some are fantastic in nature, others are scientific.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;342px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;My reference sheet (or what others call a mood board) for the Sun. You can see the giant Sun from Destiny 2 on a few different screenshots.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_025.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;715&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 4 screenshot showing 3 spheres colored in reds and oranges. First has magma like texture. Second one has a &amp;ldquo;stepped&amp;rdquo;, lowpoly and holographic look. Third one is a combination of one and two.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;179&#34;
		data-flex-basis=&#34;429px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The final visuals of the sun.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The Sun is created from two spheres that go inside each one. The outer one is a low poly, with a Fresnel Shader applied to it. It gives it the triangular holographic look, that flickers with a subtle animation. Inside of it is a proper texture, unlit Shader, that has an animated normal and some glow too. Both materials can be controlled for a change in color.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_026.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;715&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot similar to the previous one. Three spheres but now each has different color. First one is green, second is a discordant combination of purple and blue and third one is overpowering yellow with splash of tiny oranges. &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;179&#34;
		data-flex-basis=&#34;429px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Different colors of the stars.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some levels of the game could have multiple suns different locations. In that case I can have selection of colors so each is unique, more interesting.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-block-pieces&#34;&gt;Back to the Block Pieces&lt;/h2&gt;
&lt;p&gt;What those needed was a “placement system” Blueprint. It was good that I knew exactly how I wanted that. That’s, again, thanks to the traditional RTS games. What I ended up making is simple in words, but more complex in Blueprints. It’s a system where you can click on a block to place it, it becomes semi-transparent and red (again with the help of a Fresnel function). If you point to a tile, that is marked with a Boolean that says “True” for “Is this tile Place-able on?”, then the transparent color turns green. It also lets you place it on top if you click.&lt;/p&gt;
&lt;p&gt;The system for that is quite complex and I genuinely would have to do a few posts to find a way to explain it like a tutorial. Something, for which sadly there is no time right now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I also have to thank my brother, Miroslav Dimitrov, who is a programmer and helped me figure out the logic of a few things I needed to do, so I could properly turn them into Blueprints. I am sure he did not find it as amusing and fun as I did, mainly because he writes in code, has no idea how Blueprints work, and had to just guide me and watch me struggle on my own with Unreal.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My guide for anyone that might want to make a system like that is to look into &lt;strong&gt;Get Hit Result Under Cursor by Channel&lt;/strong&gt;. That is basically a line trace that goes where the location of the mouse cursor is. After you use that, do a check to what object the mouse is pointing at, and then have your IFs to change color, check if placement is possible and et cetera.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_027.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;711&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from the game showing the tiles and a sun next to them. The mouse cursor is hovered over a specific tile that has a triangular gap inside. With the mouse being there, a holographic, green, obstacle tile shows on top. It&amp;rsquo;s an indication that the tile is a valid placement. (like in an RTS)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;432px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pointing the mouse at valid slot tiles makes the block green. Red for not being able to place.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;blocks-visuals&#34;&gt;Blocks Visuals&lt;/h2&gt;
&lt;p&gt;Here I want to mention, that given the blocks are so important and the player interacts with them, it would make sense to have textures and proper interesting models for them. I would love to do that, but for now just a different color will have to do. I will go back to it and maybe model out something, given that after I completed all of the important Blueprints I need, and I make a few playable levels, I am left with some free time.&lt;/p&gt;
&lt;p&gt;My research on how the blocks could potentially look just randomly walked through my door one day. Or more like not my door, but the door of the university building I am in during classes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_028.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;1707&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A ceramic sculpture. Captures the image of a flat, rocky ground in white and blues. On top lots of purple parallelepipeds protrude.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Beautiful statues, courtesy of &lt;a class=&#34;link&#34; href=&#34;https://www.instagram.com/cherylvollorceramics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cheryl Vollor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Those intricate ceramic statues, painted with acrylic on top (if I remember correctly) are created by &lt;em&gt;Cheryl Vollor&lt;/em&gt;. I met her randomly in the first showcase room here at UCLAN in Preston. To get to the studio of our class, you walk through an entrance, small “hall” of sorts, where every week different art displays are put on. That’s where Cheryl had the exhibit of her statues.&lt;/p&gt;
&lt;p&gt;The moment I first saw them, I suddenly imagined some of the maps of my game to be like that. A weird, alien environment, with peculiar crystal formations and colorful blocks that are in a juxtaposition with the dull monotone colors of the surface. The player could pick up those blocks and move them around. This whole thought came to me way before I had done any prototyping and it just sparkled a lot of excitement in me.&lt;/p&gt;
&lt;p&gt;I spoke to Cheryl, who was amazing, and let me use the visuals of her statues in any game I created or for any research I would need. Thanks again for that, Cheryl!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere003/chromosphere_pd_029.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;960&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another picture of ceramic sculptures. This time around not only is the ground in whites and blues/purples but the protruding parallelepipeds also have those colors. They are also angled in an uneasy fashion, as opposed to the first picture where they were nearly perfectly upright.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Another photo of the statues. By &lt;a class=&#34;link&#34; href=&#34;https://www.instagram.com/cherylvollorceramics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cheryl Vollor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But as I said, we will sadly have to wait to see if I get some free time to “upgrade” the visuals of my blocks with anything remotely similar to those pictures.&lt;/p&gt;
&lt;p&gt;Hopefully you found this visual research intriguing. Next we will look into the first playtest with actual living people, that my game saw! Woah!&lt;/p&gt;
&lt;p&gt;Until next time,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pete.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;update-from-2023&#34;&gt;&lt;em&gt;Update from 2023&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I wanted to quickly update this entry to mention that there was no &amp;ldquo;next time&amp;rdquo;. I wrapped up the project by adding a few extra levels and having it all then playable.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I will admit to you though, that the game prototype was behind, priority wise, on the list of my other works, given I had at the time focused on crafting an Environment Art portfolio to try and find my break into the industry later that same 2019.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;As such I put most of my attention in &amp;ldquo;The Animal Shrine&amp;rdquo; and &amp;ldquo;The Neon Graveyard&amp;rdquo; (both of which you can read in detail about by using the &amp;ldquo;Category&amp;rdquo; buttons to the right whilst on the main page of this blog).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I did, however, create a &amp;ldquo;trailer&amp;rdquo; for the game, as part of the course. I never got to writing another entry to these blogs and showing it there, but here it is for you:&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;game-trailer&#34;&gt;Game Trailer&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/vgjCF3PDWnI&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;No mention of &amp;ldquo;vampires in space&amp;rdquo;. Kind of a missed opportunity, 2019 Peter! Instead just &amp;ldquo;Astronauts&amp;rdquo;? Oh well&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can see in the trailer that I tried to keep it humorous and easy going, as I thought then, and still believe that would be the right course of action for the game.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks,&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pete.&lt;/em&gt;&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        <item>
        <title>Chromosphere 02 - First Blueprint Systems</title>
        <link>https://petedimitrovart.com/p/chromosphere002/</link>
        <pubDate>Sat, 23 Feb 2019 20:36:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/chromosphere002/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/chromosphere002/chromo02.jpg" alt="Featured image of post Chromosphere 02 - First Blueprint Systems" /&gt;&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere002/chromo02.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;720&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE4 screenshot showcasing floating pieces of red land (in triangular tiles). To the left is a big sphere that is a sun star.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Screenshots showcasing the path with the unit (astronaut) on it. There are red ground textures in this one, but I stepped back and returned to a more clear visual style late, mainly because I wont have much time to work on visuals. Its all about Blueprints and game mechanics.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;important-blueprints&#34;&gt;Important Blueprints&lt;/h2&gt;
&lt;p&gt;For this to become a playable game, I need three crucial elements.&lt;/p&gt;
&lt;p&gt;One:&lt;/p&gt;
&lt;p&gt;One is the camera. Unreal Engine 4 does start with a few presents of options for camera. You can have first- or third-person instantly set up with proper Blueprints. In this case, though, I need a system for a camera that is more close to the properties of one in an RTS game. I want the player to see everything from above, at a sort of isometric view. That preset does not exists and sadly I will have to build my own, from scratch.&lt;/p&gt;
&lt;p&gt;Two:&lt;/p&gt;
&lt;p&gt;Two is the path, on which the player unit is going to walk. The player themself are not exactly that unit, they are not the astronaut. They don&amp;rsquo;t control the astronaut. At least not in the sense where the player moves them around with inputs like arrow or WASD keys. Instead, on the screen UI there is a button. It says “Walk”. The player presses that and the Astronaut starts walking along the path.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere002/chromosphere_pd_016.jpg&#34;
	width=&#34;638&#34;
	height=&#34;291&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from an UE4 widget / ui and ux editor. There is a red text block and a button with text &amp;ldquo;walk&amp;rdquo; on it.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;219&#34;
		data-flex-basis=&#34;526px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Walk button as seen in the game, next to the Health Pool display.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Three:&lt;/p&gt;
&lt;p&gt;Three is a Sun blueprint. In it would be stored the information of when the player should take damage. In this case, I’ve created a array of elements. I reference those and then cast a line trace between those elements (in this case, they are spotlights) and the Astronaut. If in-between those there is any element blocking the trace, then I can come to a conclusion that the Astronaut must be in shadow, and thus should take no damage.&lt;/p&gt;
&lt;p&gt;Having said all of this, lets look at each one individually once more, but this time more in detail when it comes to the logic and the blueprints themselves.&lt;/p&gt;
&lt;h2 id=&#34;camera&#34;&gt;Camera&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere002/chromosphere_pd_017.jpg&#34;
	width=&#34;483&#34;
	height=&#34;122&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Project browser screenshot from UE4. Shows icons of a folder, camera, HUD, game mode, blueprint and a widget.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;395&#34;
		data-flex-basis=&#34;950px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I’ve created my own Pawn blueprint. In it I’ve placed a camera that moves together with the movement of a ball. The ball is set to be invisible, with no collision and through the Blueprints I move the ball around. The camera follows it and thus becomes functional.&lt;/p&gt;
&lt;p&gt;There are four ways to control that movement. Three are quite simple and the 4th is a bit more complicated. First and second are controls through the arrow keys of the keyboard and through WASD. I’ve mapped those to axis movement input in the Project Settings, and then I’ve called those keybindings in the blueprints.&lt;/p&gt;
&lt;p&gt;Third way of movement is panning. You click right mouse button with the cursor of the mouse anywhere on the screen and you drag around - the map drags with the movement.&lt;/p&gt;
&lt;p&gt;Fourth was the most complicated one. It’s just like the one in a traditional real-time strategy game. You point the mouse at the edges of the screen and the camera moves in that direction.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere002/chromosphere_pd_018.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;720&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;One of the previous screenshots showing the land. On top there are photoshop annotations. It divides the screen on X and Y (up and down &amp;#43; left and right axis).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To get that working, I am calling a function in the Blueprints that is there by default. It is called &lt;em&gt;Get Mouse Position on Viewport&lt;/em&gt;. See, the screen is composed out of numbers. Sort of mapped in X and Y coordinates. Just like the illustration I’ve included above. The functions returns those X and Y and I check their value. I create 4 cases, sort of mapping the screen in 4 sectors. Or 5 I presume. One is the very middle where nothing happens. The 4 important sectors are those in the edges. If X and Y correspond to numbers that are in those 4 sectors, I then know the mouse is there and next I move it in the correct direction.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere002/chromosphere_pd_019.jpg&#34;
	width=&#34;1276&#34;
	height=&#34;705&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Blueprint editor screenshot. There is a &amp;ldquo;Pan Camera&amp;rdquo; custom node that leads into &amp;ldquo;Get Mouse Position on Viewport&amp;rdquo; that then gets split into a Sequencer Node into 4 cases. Each case then goes into a respective IF branch of == (-&amp;#43;) X Dir or == (-&amp;#43;) Y Dir.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A view of the blueprint.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Images hosted here are for some reason tiny, and I know that you probably wont be able to see very well each individual node. But I believe you can follow the logic following the colors of the links.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Edit: this was initially hosted in another web where images are smaller. One above is bigger, yet I know its actually still not easy to follow what is seen, so I apologize for not having a higher resolution for you.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Everything goes in, running on an &lt;strong&gt;Event Tick&lt;/strong&gt;. After all, I need to check where the mouse is all the time. Going in, it then plays a Sequence hooked up to 4 IFs (branches). You can already guess, that those 4 ifs control the test where the mouse is. In a case an if branch is true, it sets a value of 2 Float variables I’ve created. &lt;strong&gt;XDir&lt;/strong&gt; and &lt;strong&gt;YDir&lt;/strong&gt;. I set those two to -1 or 1. And with their respectable combination, it yells 4 results to where the mouse could be.&lt;/p&gt;
&lt;p&gt;I don’t have enough time to take screenshots of each node and showcase it well. Or to explain the logic node by node. As this is not really a detailed tutorial. But I do hope talking about the logic behind this blueprint served to be of some help to anyone reading.&lt;/p&gt;
&lt;h2 id=&#34;walkable-path&#34;&gt;Walkable path&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/cHlhjf-Pgno&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;The spline system seen in the Engine. The visuals are outdated and the shaders I am using look kind of weird. Still you can see the system demonstrated.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you want a similar spline system set up, you can follow &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=7YUxM0NDWRY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this&lt;/a&gt;. Mine is identical, with the difference that I’ve also included a player mesh that moves on top of it (Astronaut).&lt;/p&gt;
&lt;p&gt;The important part about this system is the fact that the spline, with its points that I can add, remove and move around dynamically, allows me the freedom to set up multiple levels. It’s like a sandbox system ready to be used.&lt;/p&gt;
&lt;h2 id=&#34;sun-blueprints&#34;&gt;Sun Blueprints&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere002/chromosphere_pd_020.jpg&#34;
	width=&#34;1205&#34;
	height=&#34;710&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;In-game screenshot with debug mode on. There is the giant sun and the land next to it. From the sun, ray traces go outwards and stop the moment they hit the player, or any other obstacle before that.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;407px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Invisible line traces are cast all the time to detect collision. In this image, I’ve made them visible for illustration purposes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Line traces are cast from a function called &lt;strong&gt;Line Trace by Channel&lt;/strong&gt;. Its pretty straightforward to use and I am sure you can find plenty of resources about it. Its &amp;ldquo;Start&amp;rdquo; is Sun, and the &amp;ldquo;End&amp;rdquo; is the Astronaut BP Actor (the mannequin). Small tweak I’ve done is that the start is not just the Sun, but its an array of Spotlight Elements. That way I can place a spotlight anywhere and have it referenced as the starting point and thus have more control.&lt;/p&gt;
&lt;p&gt;That would be it for now, hope you found this insightful!&lt;/p&gt;
&lt;p&gt;In my next post we are gonna explore some thoughts on models, visual language, props and the map itself. Stay tuned,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pete.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/chromosphere003/&#34;  title=&#34;index.md&#34;
    &gt;Go to next blog entry.&lt;/a&gt;&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        <item>
        <title>Chromosphere 01 - Initial Ideas</title>
        <link>https://petedimitrovart.com/p/chromosphere001/</link>
        <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/chromosphere001/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/chromosphere001/chromo01.jpg" alt="Featured image of post Chromosphere 01 - Initial Ideas" /&gt;&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromo01.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;720&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Early game screenshot from UE4. Showcasing pitch black background with an orange sphere to the side and lots of triangular land pieces to the right.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;a-new-game&#34;&gt;A New Game&lt;/h2&gt;
&lt;p&gt;I’ve been into the making and prototyping of a game from scratch the past bit less than a year. The topic of it was open, and it was up to me to decide what exactly I want to develop.&lt;/p&gt;
&lt;p&gt;Before we go into what the game is about, its story, genre and so on, I want to spend a few lines talking about my initial few other ideas. The ones I went through before deciding to go with the one that I am working on right now.&lt;/p&gt;
&lt;h2 id=&#34;the-rules-so-to-say&#34;&gt;The Rules. So to say.&lt;/h2&gt;
&lt;p&gt;Why am I making the game? What are the requirements towards it? Well, for one, making games is fun. I am an artist and a designer, so why not apply all of my skills in one place and make a whole game? But there is more than that obviously. I need this game for university. This is one of my graduation projects for BA (Hons) in Games Design at &lt;a class=&#34;link&#34; href=&#34;https://www.uclan.ac.uk/undergraduate/courses/games-design-ba&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;University of Central Lancashire&lt;/a&gt;, Preston, UK.&lt;/p&gt;
&lt;p&gt;As far as rules go at uni, well there is a big and important one. I have to develop everything on my own, from scratch. And that is what dictates the strongest the reasoning to why exactly I chose this idea out of the total three I had initially.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;initial-idea-01&#34;&gt;Initial Idea 01&lt;/h2&gt;
&lt;p&gt;Time Rupture&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_002.jpg&#34;
	width=&#34;666&#34;
	height=&#34;500&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Start screen of the 2D, pixel art game &amp;ldquo;Time Rupture&amp;rdquo;. Starry pixel-art sky with white text on top that reads the game name. On each side are floating pixel lands with Egyptian Pyramids on one, the Eiffel Tower on the other.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Time Rupture&lt;/strong&gt;&lt;/em&gt; is a game idea I came up with together with my brother, &lt;a class=&#34;link&#34; href=&#34;https://www.linkedin.com/in/miroslav-dimitrov-17592a107/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Miroslav Dimitrov&lt;/a&gt;, in the distant past year of 2013. The project was created in the span of a single weekend and a bit. 72 hours. For the famous game jam website &lt;em&gt;&lt;strong&gt;Ludum Dare&lt;/strong&gt;&lt;/em&gt;. You can see our initial submission over at our &lt;a class=&#34;link&#34; href=&#34;https://ludumdare.com/resources/archive/compo/?u=ludum-dare-27/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blog&lt;/a&gt; there.&lt;/p&gt;
&lt;p&gt;The idea behind the game was simple; you are a time traveller, who created a time-travel machine. You go on said machine and start to teleport through different time dimensions, going in the past, future and so on. Though the very first teleportation though, something goes wrong. The machine breaks down and pieces of it spill around you. Ten seconds pass and you are suddenly teleported somewhere else. At every teleportation you can go around and collect random bits of metal and machine pieces. Those increase your score. When the ten seconds go through, you must be back on the machine. If you are not at it, it teleport itself without you and you are suddenly stranded. You lose the game.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_003.jpg&#34;
	width=&#34;663&#34;
	height=&#34;500&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from &amp;ldquo;Time Rupture&amp;rdquo;. Grassy, pixel art meadow with few rocks, pine trees and lakes dotted around.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Screenshot 01 - The player finds themself stranded in 2nd Century. Somewhere in Northern Thrace.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The idea of the game was kind of elegant in its simplicity. And as it is with most nice things, it was born out of prerequisite, not out of pure wit. The condition that birthed it was the rule of the game jam. Its theme which participant were bound to follow.&lt;/p&gt;
&lt;p&gt;The theme read:
&lt;em&gt;&lt;strong&gt;10 Seconds.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_004.jpg&#34;
	width=&#34;663&#34;
	height=&#34;500&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot, this time around in an underground place. Around are scattered red, green, pink and purple crystals. The top right of the screen reads and explains that the place is &amp;ldquo;HOLLOW EARTH - THE YEAR OF 2473&amp;rdquo;&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I though it might be cool if I were to recreate the game. 3D low-poly art with some interesting light effects and particles. Assembled in Unreal Engine 4, programmed there with Blueprints. Props modelled in Maya, texturing in Substance Painter and Designer.&lt;/p&gt;
&lt;p&gt;And to back up the idea, we really did get quite a good score at the competition back in 2013, proving that there is potential in the concept:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_005.jpg&#34;
	width=&#34;485&#34;
	height=&#34;285&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from end result of Ludum Dare 2013. Various categories like &amp;ldquo;theme, graphics, audio, mood, innovation, overall, humor, fun&amp;rdquo; are listed with a score to the right.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;We placed number &lt;em&gt;69&lt;/em&gt; for the theme. Out of a total of &lt;em&gt;2213&lt;/em&gt; game entries.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I really though the idea is simple and I would be able to recreate it and even improve onto it for the one year I have at uni to develop everything.&lt;/p&gt;
&lt;p&gt;The only thing that sort of stopped me is the fact that I am an artist and designer, but not much of a programmer. I can do simple visual scripting in Blueprints (which came out to not be very simple in the current state of the project, but we shall see that in the next posts), but I can’t really code anything complex in any language. And I wanted to be able to do justice to things like spawning different mechanical parts and elements into the world, using some algorithm a bit more complex and elegant than what I can sadly do on my own.&lt;/p&gt;
&lt;p&gt;I talked to my teachers and they said its fine if I have some help from outside. With the programming that is. As long as I keep all of the art and design elements/mechanics completely from me. And so I knew I could bring my brother to the project, and have him program a few algorithms for me. I decided to leave it to that though, and explore more ideas and maybe stumble across something I can execute more independently, just on my own.&lt;/p&gt;
&lt;h2 id=&#34;initial-idea-02---running-out-of-space&#34;&gt;Initial Idea 02 - Running Out of Space&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_006.jpg&#34;
	width=&#34;1080&#34;
	height=&#34;839&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A 3D model screenshot from Maya. Shows a &amp;ldquo;dissection&amp;rdquo;-like look of a spaceship and its corridors.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;308px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Model in Maya that I created as an initial proof of concept.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For this game I didn’t have a working title, but again more of a working theme. Again from Ludum Dare &lt;em&gt;(you can probably already guess I sort of really like that event and game jam website :P)&lt;/em&gt;. The theme was &lt;strong&gt;Running Out of Space&lt;/strong&gt;. And it sort of aligned with some ideas and notes I had been doing prior to going in the jam. The jam was held during a weekend in August, 2018. We didn’t manage to create anything playable or to submit anything, but it was still a nice exercise of generating ideas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_007.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;1707&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sketchbook photograph reading &amp;ldquo;3D - Limited space on a spaceship. You travel far away but the ship is breaking down. You have to repair and expand on it&amp;rdquo;. Under are a few more annotations and a sketch of a spaceship room.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;179px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Initial notes and a quick sketch I did back then.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_008.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;636&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another Maya screenshot. This time around a closer angle of what appears to be an engine of a spaceship and the surrounding room.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;201&#34;
		data-flex-basis=&#34;483px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Initial camera view I tested. The game would be a 2.5 side view, where in 3D space you assign units what to do. You gather and manage resources and space people.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I had some additional ideas that I though would fit perfect into this game concept. But there was one thing - in a staggering opposition with everything I said previously with the &lt;strong&gt;Time Rupture&lt;/strong&gt; game idea. It’s the fact that, if I were to make this game, a sim in genre, where you deploy all kinds of units around the ship, it would require really importantly on one important thing. That thing is artificial intelligence. I would need a good AI. One that would control the units and make them move around the ship. It would let them execute the tasks the player has given them.&lt;/p&gt;
&lt;p&gt;Well that was an idea more complex in programming than anything else I had though about. And even though I am keeping it in my records as a project I might go back to on day, it was by no chance appropriate for university.&lt;/p&gt;
&lt;h2 id=&#34;initial-idea-03---light-is-dangerous&#34;&gt;Initial Idea 03 - Light is Dangerous.&lt;/h2&gt;
&lt;p&gt;This &amp;ldquo;Light is Dangerous&amp;rdquo; later turned into &amp;ldquo;Chromosphere&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_009.jpg&#34;
	width=&#34;578&#34;
	height=&#34;503&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Text screenshot reading &amp;ldquo;Theme Voting Round 3&amp;rdquo; and 16 words and phrases under, that are the themes. One of them is &amp;ldquo;Light is Dangerous&amp;rdquo;&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;114&#34;
		data-flex-basis=&#34;275px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I sat down to think about a third idea. This time around the main condition: the idea needs to be simple. Execution should be possible just on my own.&lt;/p&gt;
&lt;p&gt;I had nothing to get me started and that’s why I took this screenshot you see up there. Its a near final round of voting for a theme. A theme for another Ludum Dare. Not sure which one or the date. But it still listed 16 themes and I though that is enough ideas to get me started.&lt;/p&gt;
&lt;p&gt;I took and combined &amp;ldquo;Shadows&amp;rdquo; together with &amp;ldquo;Light is dangerous&amp;rdquo;. Ye, they both kind of sound like a cliche, but I though it might be fun to explore what I can come up with.&lt;/p&gt;
&lt;p&gt;What I came up with was a puzzle game. One where you, the player are not in control of a character. Instead you are in control of the environment in which the protagonist is. The character is stranded on a piece of land. Maybe somewhere in space. Next to them is a giant sun. A star. It emits light so hot, that if the character steps in it for far too long, they starts taking damage and then burn.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_010.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;960&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sketchbook page picture. A drawing of a piece of land with pieces that cast shadows. Giant sun next to it. There is also a lot of text that I use and transcribe better in the paragraphs below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Initial sketch and notes of the idea.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_011.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;960&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Page pic: &amp;ldquo;Some blocks that throw shadows could be timed. You start the timeline and one chargers for 5 seconds before appearing and throwing shade.&amp;rdquo;&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Yellow note in pic above reads: &amp;ldquo;You are a spaceman&amp;hellip; who is also a vampire. You are in open space and you&amp;rsquo;ve lost your helmet. Help the vampire get to the end and retrieve their helmet.&lt;/p&gt;
&lt;p&gt;Notes to the side read: &amp;ldquo;Goal is to retrieve a space suit helmet. - Goofy, easy-going story.&amp;rdquo;
&amp;ldquo;Harder levels could have multiple units (spacemen), who walk different paths at the same time. Makes it more complex.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Trigger pressure plates on the paths that manipulate the environment on the go.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Specific part of the path goes to night? Day-night cycle?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;I think in the first page you can read where I took inspiration for the idea: during the summer, just before going back to uni, I build myself a new desktop PC. I needed a powerful GPU (I used an integrated one before that) in order to handle all of the graphic 3D work I was about to start doing in Unreal (for stuff like this project). The video card I got came with a free copy of Destiny 2. I hadn’t played it before that, but given how gorgeous and heavy in graphics it looked, I had to try my new GPU on it. I sunk in quite a few hours playing it and had a blast.&lt;/p&gt;
&lt;p&gt;There was one particular level of its missions that stuck with me for a long time.&lt;/p&gt;
&lt;h2 id=&#34;destiny&#34;&gt;Destiny&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_012.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;676&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Concept art piece from Destiny 2, Bungie. Surface of Mercury with a giant, overpowering sun in the distance. There is a big sci-fi tower too.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;189&#34;
		data-flex-basis=&#34;454px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Concept painting by &lt;a class=&#34;link&#34; href=&#34;https://www.artstation.com/dorje&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dorje Bellbrook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In that mission you are on a ship just past Mercury, right next to the Sun. At some point you have to get to a specific part that is locked. You are forced to go outside the spaceship and walk on its exterior. That walk stuck with me because it had the mechanic where you had to stay in the shadow bits of the map. It was super simple and wasn’t challenging as a puzzle or anything. The game is a FPS shooter after all. But there was something really beautiful in the giant sun that you could stare right into too.&lt;/p&gt;
&lt;p&gt;I though about a few systems that I need to have to get the game working. Then decided they are not too complex for me to execute in just mere Blueprints, no programming language. That is when I got on board with it and started developing the game.&lt;/p&gt;
&lt;p&gt;This is one of the first proof of concepts I did quickly in Unreal 4 back then.&lt;/p&gt;
&lt;h2 id=&#34;prototype-screenshots&#34;&gt;Prototype screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_013.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;720&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Starry, blue outer space background. Triangular land pieces to the foreground with placeholder, gray material. To the left is a holographic looking, orange sphere (a sun).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;A few weeks of developing after that got me to this visual style and a few systems in.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/chromosphere001/chromosphere_pd_014.jpg&#34;
	width=&#34;1280&#34;
	height=&#34;720&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Same angle screenshot as before. Now the sun sphere is filled in with proper material shader and looks more like a surface of a star. On the gray tiles to the right now there is also a pink path.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I’ll talk about how I got to this stage and what my blueprints are in the next post.&lt;/p&gt;
&lt;p&gt;Hope you find reading this interesting. Keep tuned,&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pete.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/chromosphere002/&#34;  title=&#34;index.md&#34;
    &gt;Go to next blog entry.&lt;/a&gt;&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        
    </channel>
</rss>
