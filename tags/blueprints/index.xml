<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Blueprints on Pete Dimitrov&#39;s Blog</title>
        <link>https://petedimitrovart.com/tags/blueprints/</link>
        <description>Recent content in Blueprints on Pete Dimitrov&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 25 Apr 2024 09:16:00 +0000</lastBuildDate><atom:link href="https://petedimitrovart.com/tags/blueprints/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Why Your Unreal Students Project Has Low FPS</title>
        <link>https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/</link>
        <pubDate>Thu, 25 Apr 2024 09:16:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-call-tip-001.jpg" alt="Featured image of post Why Your Unreal Students Project Has Low FPS" /&gt;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;There are many reason as to why a game project or a prototype could have low performance. In order to find the source of the trouble, one needs to profile both their CPU and their GPU intensive processes. Different things we do in an engine, mechanics or visuals that we implement can end up on the CPU or on the GPU. We could have a perfect performance on one of those, but if the other one is lacking, we will be negatively bound to it. That is what we mean when we try to analyze whether we are &lt;strong&gt;CPU-bound&lt;/strong&gt; or &lt;strong&gt;GPU-bound&lt;/strong&gt; in a game.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Over the years I&amp;rsquo;ve seen many student&amp;rsquo;s projects that are not supposed to be mechanically or visually complex, but simple and elegant on purpose. They are just blockouts of 3D spaces that are a &amp;ldquo;&lt;em&gt;Level Design&lt;/em&gt;&amp;rdquo; exercise more than anything else. In their project, though, the student will still struggle with performance.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a mostly a sketch, level design blockout, yet the FPS is low. Why?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-call-tip-003.jpg&#34;
	width=&#34;2548&#34;
	height=&#34;1433&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Old screenshot from an UE4 project from my university days. It depicts a space station on the surface of what seems to be a satellite. All of the meshes are blockout pieces and have gray, placeholder textures. I had set up some of the floor plates as blueprints and as such I had messed up my draw calls.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;culprits&#34;&gt;Culprits&lt;/h2&gt;
&lt;p&gt;There are many reasons that could cause the issues. One would need to in detail profile their project in order to find the specifics.&lt;/p&gt;
&lt;p&gt;When it comes to student works though, there are some culprits that I often see repeated again and again. As such we could make an educated guess and say that, as a student, the project you are working in right now, might have exactly one of those issues.&lt;/p&gt;
&lt;p&gt;Those four main reasons are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;blocking out using BSP Brushes;&lt;/li&gt;
&lt;li&gt;blocking out by making blueprint actors;&lt;/li&gt;
&lt;li&gt;creating a loot item that has an animation on the CPU;&lt;/li&gt;
&lt;li&gt;using lots of overlapping lights.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first three are actually the same issue, disguised differently. That is the problem of &amp;ldquo;&lt;em&gt;&lt;strong&gt;draw calls&lt;/strong&gt;&lt;/em&gt;&amp;rdquo;. We will look into that next.&lt;/p&gt;
&lt;h2 id=&#34;game-engines&#34;&gt;Game Engines&lt;/h2&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Engine:&lt;/p&gt;
    &lt;p&gt;The examples we show in this blog are mostly in UE5. If we were doing things in UE4 the situation would be nearly identical. Nanite in UE5 handles draw calls better than UE4 but most of the explanations I mention as culprits for low performance cannot be fully alleviated by Nanite. As such the issue persists.&lt;/p&gt;
    &lt;/div&gt;
&lt;div class =&#34;colorblock error&#34;&gt;
    &lt;p&gt;Unity:&lt;/p&gt;
    &lt;p&gt;In my students days, I didn&amp;#39;t know about a lot of these tech issues that I&amp;#39;m about to describe here. I learned about the culprits and how to resolve them back in my first industry job. It was an indie game dev studio. In there, I actually worked in Unity. Even though Unity can be quite different from UE5 in some aspects, lots of the fundamentals are the same. If you are learning and working with Unity right now, you would still benefit from reading this blog post.&lt;/p&gt;
    &lt;/div&gt;
&lt;h2 id=&#34;issues-explored&#34;&gt;Issues Explored:&lt;/h2&gt;
&lt;h3 id=&#34;draw-calls&#34;&gt;Draw Calls&lt;/h3&gt;
&lt;p&gt;The biggest issue that I most often find in students projects is mismanagement of draw calls. This one is so prevalent that I think it can be found often in indie projects out there too. Those are projects that are done by experienced people who might not have found good ways to manage their draw calls yet either.&lt;/p&gt;
&lt;p&gt;Draw calls is a topic that is not very often discussed at universities and schools either. As such it creeps as a mistake in so many game prototypes &lt;em&gt;(and some finished, released games too)&lt;/em&gt;.&lt;/p&gt;
&lt;div class =&#34;colorblock warning&#34;&gt;
    &lt;p&gt;Draw call:&lt;/p&gt;
    &lt;p&gt;A draw call is a request going through the CPU, that will inform the GPU what object to render and how to render it. The request comes with a bundle of information like position, scale, material IDs, material usage and more. It can be for a single object or a batch of objects.&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;In larger game companies, knowledge and experience flows freely, and as such when it comes to their games there will often be people, or custom tools, that will directly optimize and look at the draw calls footprint through the different stages of the project.&lt;/p&gt;
&lt;p&gt;The way most engines work is through common and easy tactics that when applied will have your many objects on the screen end up in batches of draw calls. That way the scene gets optimized and the number of draw calls is controlled.&lt;/p&gt;
&lt;div class =&#34;colorblock normal&#34;&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;p&gt;The goal is to always keep our draw calls amount low.&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;But there are some things you might do that will hardly ever batch. Those things will skyrocket your draw calls amount:&lt;/p&gt;
&lt;h3 id=&#34;bsp-brushes&#34;&gt;BSP Brushes&lt;/h3&gt;
&lt;p&gt;One case study for an easy way to skyrocket your draw calls (&lt;em&gt;&lt;strong&gt;thats very bad&lt;/strong&gt;&lt;/em&gt;) in both UE5 and UE4 is through the usage of &lt;em&gt;&lt;strong&gt;BSP Brushes&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Here are a few example screenshots from my environment project &lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/animal-shrine-014/&#34;  title=&#34;index.md&#34;
    &gt;&lt;em&gt;&amp;ldquo;The Animal Shrine&amp;rdquo;&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;2018&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-call-tip-004.jpg&#34;
	width=&#34;2660&#34;
	height=&#34;1496&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from UE4 where an environment scene is seen in its early stages. It showcases a Japanese shrine in the style of Izumo-taisha (Izumo Grand Shrine).There are multiple levels of height and lots of wooden structures blocked out in gray and green checkerboard materials.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In the image above, my project is in early blockout. I love doing my measurements and shapes exploration for the different buildings through BSP brushes. But there is a giant drawback to using BSP brushes. If I am not careful and aware of it, I could easily create a larger blockout that then has incredibly poor performance.&lt;/p&gt;
&lt;p&gt;Imagine the things seen above, but suddenly duplicated many times and blocking out a level that is few kilometers wider, instead of the smaller section of level seen above. The poor performance created by the BSPs will then even be exponentially higher.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-call-tip-005.jpg&#34;
	width=&#34;2484&#34;
	height=&#34;1397&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot from the same UE4 project as in the image before. This time the shot shows it in later dev stage. There are more finalized, wooden textured props. The layout has been improved too. There is grass and trees blockouts in the background. &amp;ldquo;The Animal Shrine&amp;rdquo;, 2018.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In the image above, we see a later dev stage where I have already replaced all of my BSP brushes for actual static geometry, created in Blender &lt;em&gt;(or Maya, which I used back in those years)&lt;/em&gt;. By replacing the BSPs, I fixed my performance. A lot of blockouts and students projects never get to a stage of replacing BSPs for static geo. That is understandable - the BSPs serve a perfect purpose and the level created is a level design blockout, not something that needs to have finished set dressing. It&amp;rsquo;s not wanted to replace the brushes.&lt;/p&gt;
&lt;p&gt;But by not replacing the BSPs, we&amp;rsquo;ve left in the scene a type of actor that carries an incredibly high amount of draw calls.&lt;/p&gt;
&lt;div class =&#34;colorblock error&#34;&gt;
    &lt;p&gt;Issue&lt;/p&gt;
    &lt;p&gt;BSP Brushes cary a lot of information in them that gives them their custom dimensions. For example, a parallelepiped is represented by the length of each of its sides. In the options of the BSP we can change any of those sizes dynamically. We are given lots of freedom for iteration. That freedom comes at the cost of draw calls. Each object has more than one draw call (due to the dimension options in it). Each object is unique too, which makes it impossible to batch any draw calls.&lt;/p&gt;
    &lt;/div&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Solution&lt;/p&gt;
    &lt;p&gt;BSP Brushes can be baked down (also called merge). They can be converted into a finalized, static geometry, that cannot be dynamically changed in dimensions. Through that bake, the draw calls are reduced to low amounts.&lt;/p&gt;
    &lt;/div&gt;
&lt;h4 id=&#34;merge-down-bsp-brushes&#34;&gt;Merge Down BSP Brushes&lt;/h4&gt;
&lt;p&gt;The easiest way to win back our good performance, when using BSP brushes that we intend to keep in the level, is to bake down the BSPs.&lt;/p&gt;
&lt;div class =&#34;colorblock normal&#34;&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;p&gt;Step-by-step how-to for merging down BSPs:&lt;/p&gt;
    &lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Select the BSP Actor that you want to turn into ordinary static geometry;&lt;/li&gt;
&lt;li&gt;In the right hand menu, look in the &amp;ldquo;Details&amp;rdquo; of the Brush component;&lt;/li&gt;
&lt;li&gt;Click on &amp;ldquo;Advanced&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;Press &amp;ldquo;Create Static Mesh&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;Pick the location to save it;&lt;/li&gt;
&lt;li&gt;Done. Engine does the rest.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The engine will save a new static mesh that is in the shape of your BSP. It will also replace your old &amp;ldquo;Brush Component&amp;rdquo; for a &amp;ldquo;Static Mesh Actor&amp;rdquo; that has more efficient draw calls and is the result of the bake down we just did.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;The steps, illustrated:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/merge-actor-001.jpg&#34;
	width=&#34;1503&#34;
	height=&#34;953&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot from UE5. A blank level is seen with lots of checkerboard texture geometry primitives. A selection gizmo hovers over a selected, lowpoly, sphere. Yellow text on top points to the right side &amp;ldquo;Details panel&amp;rdquo; and us clicking on &amp;ldquo;Advanced&amp;rdquo; then on &amp;ldquo;Create Static Mesh&amp;rdquo;. Yellow text is transcribed in the paragraph below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select the brush geo. Expand &amp;ldquo;Advanced&amp;rdquo; tab. Press &amp;ldquo;Create Static Mesh&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/merge-actor-002.jpg&#34;
	width=&#34;1503&#34;
	height=&#34;953&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Same image as before but now there is a submenu that has popped up on the screen after pressing &amp;ldquo;Create Static Mesh&amp;rdquo; the first time around. This menu shows the project directory and asks us in what folder to save the geometry that we are about to create. Yellow text is transcribed below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select where to save. Press &amp;ldquo;Create Static Mesh&amp;rdquo; &lt;em&gt;(blue button seen above)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/merge-actor-003.jpg&#34;
	width=&#34;1503&#34;
	height=&#34;953&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Identical to before image but now the selection on the sphere has changed. On the right hand side, in the &amp;ldquo;Details&amp;rdquo; panel the sphere is listed as a different component. Yellow text described below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here you can see that now your component type is &lt;strong&gt;&amp;ldquo;Static Mesh&amp;rdquo;&lt;/strong&gt;. We turned the &lt;strong&gt;&amp;ldquo;Brush Component&amp;rdquo;&lt;/strong&gt; &lt;em&gt;(has lots of draw calls)&lt;/em&gt; into &lt;strong&gt;&amp;ldquo;Static Mesh Component&amp;rdquo;&lt;/strong&gt; &lt;em&gt;(has manageable, lower amount of draw calls)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can go over your scene and do that for each unique type of geometry shape you&amp;rsquo;ve created. After turning one shape into a static geometry, replace any other BSPs visually similar to it for the newly created static geometry.&lt;/p&gt;
&lt;h4 id=&#34;proof&#34;&gt;Proof&lt;/h4&gt;
&lt;p&gt;But we jumped to the solution above, without me presenting any evidence. Lets say that before you went through all of the ordeal of merging and baking down your geometry, you wanted to see proof that indeed BSP brushes are as bad as I describe them to be. Here is some:&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;cmd&lt;/p&gt;
    &lt;p&gt;stat scenerendering&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;Easiest way to see some evidence is to analyze the draw calls amounts on a screen at a given time and compare it to the same screen but with some of the &amp;ldquo;static mesh&amp;rdquo; actors swapped instead for &amp;ldquo;BSP brush&amp;rdquo; actors.&lt;/p&gt;
&lt;p&gt;What we expect to see, given all of the reasoning I went through so far, is that the &amp;ldquo;static mesh&amp;rdquo; actors filled screen will be low on draw calls. The screen filled with &amp;ldquo;BSP brush&amp;rdquo; actors instead will be incredibly high on draw calls.&lt;/p&gt;
&lt;p&gt;We can do exactly that by using the console command seen above, inside Unreal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/cmd-001.jpg&#34;
	width=&#34;1044&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;An image of a blank scene in UE5. The left side of the editor UI is seen. An arrow points to the lower part where &amp;ldquo;Content Drawer&amp;rdquo; and &amp;ldquo;Output Log&amp;rdquo; are. Next to them is a &amp;ldquo;CMD&amp;rdquo;. There is a black bar that says &amp;ldquo;Enter Console Command&amp;rdquo;. Yellow text says to click on it to start typing.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;90&#34;
		data-flex-basis=&#34;217px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Click on the cmd seen above and start typing. Write:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;l&#34;&gt;stat scenerendering&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then hit &amp;ldquo;Enter&amp;rdquo; on the keyboard. A profiling window in green colors will show up on the screen.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/cmd-002.jpg&#34;
	width=&#34;1325&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot of a screen identical to before (blank UE5 scene). This time, we&amp;rsquo;ve typed into the cmd and a profiling screen has popped up on top. Lots of green text describes different stats. By the bottom, in &amp;ldquo;Counters&amp;rdquo; under &amp;ldquo;Present time - 5.40ms&amp;rdquo; there is &amp;ldquo;Mesh draw calls - average 13.23 and max 53.00&amp;rdquo;. Orange arrow points to that and yellow text says &amp;ldquo;Lots of useful stats here but what we are after right now is this line. Mesh draw calls.&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;115&#34;
		data-flex-basis=&#34;276px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve circled the line above which we are after on this newly popped up &amp;ldquo;Scene Rendering&amp;rdquo; profiling screen. We can see that Mesh draw calls are max 53.00 and min 5.00. That is expectedly low amount given that right now our camera frustum (viewing frustum) is looking at a mostly empty corner of the level.&lt;/p&gt;
&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;p&gt;Now lets look at a part of the screen with some static meshes and BSP brushes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-proof-001.jpg&#34;
	width=&#34;1538&#34;
	height=&#34;1010&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot of a mostly empty, default UE5 scene. There is a checkerboard floor, a blue sky, a yellow bench and 3 geometric solid primitives colored in white.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;365px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Image above showcases a scene with a few assets of type &amp;ldquo;Static Mesh&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-proof-002.jpg&#34;
	width=&#34;1539&#34;
	height=&#34;1011&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image that is the same, previously empty scene, but now on top of the screen are overlaid stats from scene rendering. Lots of green text with lots of important information. In this case we are looking at &amp;ldquo;Mesh draw calls - average 19.92 and max 29.99&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;365px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once we do &amp;ldquo;stat scenerendering&amp;rdquo; on the screen we see that the mesh draw calls of this scene are low. Average of 19.92 and max of 29.00 (&lt;em&gt;seen above&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-proof-003.jpg&#34;
	width=&#34;1539&#34;
	height=&#34;1012&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another image of the same camera angle as before. Now next to the orange bench are added lots more geometry primitives. Those are cubes, cones, polyhedrons. They are all shaded in dark gray checkerboard texture. They are all BSP brush actor types.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;364px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Next up, in image above, we add a bunch of BSP brush actor types to the scene. Those are in the form of various geometry primitives but the important part is that they are BSP brushes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-proof-004.jpg&#34;
	width=&#34;1535&#34;
	height=&#34;1008&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;The same camera angle as before but now most of the geometry is hidden under the green text stats scene. Looking at the &amp;ldquo;Mesh draw calls&amp;rdquo; line of it tells us that average draw calls are 951.62 and maximum are 1,916.00.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;365px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once we again do &amp;ldquo;stat scenerendering&amp;rdquo; on the screen above, we see that now our draw calls have sky-rocketed. On average they are 951.62 and on max they even go as high as 1,916.00.&lt;/p&gt;
&lt;p&gt;This large number, as explained already, is due to the BSP brushes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-proof-008.jpg&#34;
	width=&#34;2831&#34;
	height=&#34;2020&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;An image that looks at the same angle as before but now its a collage of four similar images. Image one, (a), is a close up of the orange bench and the BSP brushes next to it. Image two, (b), showcases the stats of that scene. Image three, (c), looks identical to image (a) but now the BSP brushes have been converted to static meshes. Image four, (d), looks at the stats of image (c) and it shows how they are exponentially lower than before. The numbers are transcribed in the paragraph below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;336px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In this final figure, we have top row images &lt;strong&gt;(a)&lt;/strong&gt; and &lt;strong&gt;(b)&lt;/strong&gt;, consisting of the scene full of BSP Brushes.&lt;/p&gt;
&lt;p&gt;In the bottom row, images &lt;strong&gt;(c)&lt;/strong&gt; and &lt;strong&gt;(d)&lt;/strong&gt;, we have used the technique described in this blog post and have turned the BSP brushes actors into static meshes.&lt;/p&gt;
&lt;p&gt;The visuals between &lt;strong&gt;(a)&lt;/strong&gt; and &lt;strong&gt;(c)&lt;/strong&gt; are identical. Yet the scene in &lt;strong&gt;(b)&lt;/strong&gt; that had BSP brushes has average of 951.62 draw calls. The scene with only static meshes, seen in &lt;strong&gt;(d)&lt;/strong&gt;, has 82.48.&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Conclusion from comparison above:&lt;/p&gt;
    &lt;p&gt;BSP Brushes, as seen above introduce lots of needless draw calls. Keep your level blockouts and your environment art scenes free of them by converting to static meshes and your performance will be much higher.&lt;/p&gt;
    &lt;/div&gt;
&lt;h3 id=&#34;blueprint-actors&#34;&gt;Blueprint Actors&lt;/h3&gt;
&lt;h4 id=&#34;short-explanation&#34;&gt;Short explanation&lt;/h4&gt;
&lt;p&gt;Did you intend to use some geometry as static? Did you turn it into a blueprint because you wanted to attach something else that is static to it?
If yes, then turning it into a blueprint might have turned it into &amp;ldquo;movable&amp;rdquo; geometry that then has increased draw calls and can&amp;rsquo;t bundle in draw calls with instances (&lt;em&gt;copies in the level&lt;/em&gt;) of itself.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/movable-show.jpg&#34;
	width=&#34;440&#34;
	height=&#34;179&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot from inside a Blueprint window inside Unreal 5. The crop shows a part of the &amp;ldquo;Details Panel&amp;rdquo;. It focuses on &amp;ldquo;Transform&amp;rdquo; and &amp;ldquo;Mobility&amp;rdquo; settings under it. An arrow points at &amp;ldquo;Movable&amp;rdquo; and says &amp;ldquo;Bad!&amp;rdquo; We should use &amp;ldquo;Static&amp;rdquo; instead.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;245&#34;
		data-flex-basis=&#34;589px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As such, go into the newly made blueprint with static art set dressings and make sure you set the root and the children geometry inside all as &amp;ldquo;Static&amp;rdquo; instead of &amp;ldquo;Movable&amp;rdquo;. All solved!&lt;/p&gt;
&lt;h4 id=&#34;long-explanation&#34;&gt;Long explanation&lt;/h4&gt;
&lt;p&gt;Working with Blueprints is a smart thing to do. It definitely is the right approach no matter if you are doing level design, mechanics or environment art and set dressing.&lt;/p&gt;
&lt;p&gt;Even thought a lot of people who start in Unreal for the first time might not see the use of Blueprints past gameplay and mechanics, there is in fact lots to extract from blueprints when doing set dressing.&lt;/p&gt;
&lt;p&gt;When making environment art, it can sometimes be slow to work directly into the world, in world space. You create a building and it is placed at an odd angle in the level. Every set dressing that might go onto its exterior, on its façade, you need to place at a similarly odd angle. An easier way to work instead would be to create &lt;em&gt;&lt;strong&gt;&amp;ldquo;local space&amp;rdquo;&lt;/strong&gt;&lt;/em&gt;. A bundle of assets - the buildings and its façade set dressings - placed in its own coordinates. That is exactly a blueprint. That &amp;ldquo;local space&amp;rdquo; bundle, then like a little template can be placed in the world, at an odd angle. It&amp;rsquo;s creation, through a blueprint, instead of directly working in &amp;ldquo;world space&amp;rdquo; was much easier.&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;p&gt;(Below I made a silly looking house as a quick example. Ignore the fact it doesn&amp;#39;t look amazing. I used Unreal starter project meshes with the idea of illustrating the explanations here a bit better.)&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/template-actor-001.jpg&#34;
	width=&#34;1663&#34;
	height=&#34;805&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from a blank level. In the middle are two identical houses. Left is just meshes in the world, right is meshes that are inside a blueprint instead. A yellow text reads &amp;ldquo;In this pic I&amp;rsquo;ve selected each asset individually. Each asset is placed on its own, and its own odd angle.&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;495px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you are working with multiple people and there is version control, this means you don&amp;rsquo;t need to commit changes to the world (the level) next time you want to improve the building. Instead you can edit the blueprint (the local space) and commit that change. The fixes and improvements will automatically propagate to every level where the blueprint was used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/template-actor-002.jpg&#34;
	width=&#34;1663&#34;
	height=&#34;805&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image identical to before but now the right side house is selected. The one that is a blueprint. An arrow points at the outliner that showcases the assets are not loose anymore but in a bundle. Yellow text reads &amp;ldquo;Second asset selected here is a Blueprint instead. Actors are bundled in a template that is easier to select and move.&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;495px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Hopefully this paints a picture of why its &lt;em&gt;&lt;strong&gt;great&lt;/strong&gt;&lt;/em&gt; to work with blueprints in order to build &lt;em&gt;&lt;strong&gt;&amp;ldquo;templates&amp;rdquo;&lt;/strong&gt;&lt;/em&gt; of environment art and set dressing. In the image below is seen one such template.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/template-actor-003.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;976&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from a Blueprint editing window in Unreal 5. It showcases the house and all its set dressings bundled together. Yellow text reads &amp;ldquo;Editing the art in a &amp;ldquo;mini scene&amp;rdquo; like this is much easier tha editing inside the world level.&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you do the above, here comes the issue though, and the reason why you might have low performance next.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/template-actor-004.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;976&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image like before but now an arrow points to the &amp;ldquo;Mobility&amp;rdquo; settings and yellow text reads &amp;ldquo;The template came with default settings through. Those settings are wrong for the use case (environment art set dressing).&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As seen above, the default settings when making a blueprint will set every static geometry inside to &amp;ldquo;movable&amp;rdquo; instead of &amp;ldquo;static&amp;rdquo;. As mentioned before, that increases draw calls. It&amp;rsquo;s also needless, as these pieces will be used as environment art that doesn&amp;rsquo;t ever move. We can fix it all by changing the mobility back to static, as seen in the next images.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/template-actor-005.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;976&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Identical to before UE5 blueprint editor screenshot. An orange arrow points to &amp;ldquo;Mobility&amp;rdquo; and crosses over &amp;ldquo;Movable&amp;rdquo;, explains that &amp;ldquo;Static&amp;rdquo; is the correct one. The text is described in the next paragraph.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Yellow text above reads &amp;ldquo;We need to change the mobility from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo;. This way draw calls will be manageable. In this step we changed the root and next we need to also change the mobility of any meshes under it as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/template-actor-006.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;976&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another image from the same blueprint. On the left side, in the &amp;ldquo;Components&amp;rdquo; window, in blue are selected lots of children static meshes. Another arrow on the right hand side points again to &amp;ldquo;Mobility&amp;rdquo; this time of the selected many children assets. Yellow text is described below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Image above instructs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Next we should select all children under the root.&lt;/li&gt;
&lt;li&gt;Then we change their &amp;ldquo;Mobility&amp;rdquo; from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo; as well. A yellow arrow points to where to do that in the blueprint details panel.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Save the blueprint file changes and all is done. We are now all optimized on draw calls.&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;p&gt;With all set to static, all is good and manageable in draw calls. Always pay attention to your mobility settings for new Blueprints and you will not have further performance issues related to the BPs.&lt;/p&gt;
    &lt;/div&gt;
&lt;h3 id=&#34;moving-drops-and-loot&#34;&gt;Moving Drops and Loot&lt;/h3&gt;
&lt;p&gt;You&amp;rsquo;ve created a little game prototype. It consists mostly of blockout levels without any heavy graphics. You are a person interested in level design, as well as game design for gameplay mechanics and gameplay systems.&lt;/p&gt;
&lt;p&gt;Your game prototype world is just the mentioned above: blockouts. You have also added some enemies and simple loot that spawns when the minions die. Perhaps you&amp;rsquo;ve also scattered and placed some predefined collectables in your level.&lt;/p&gt;
&lt;p&gt;For a collectable to be easily spotted by the player, and for it to look interesting and like we could interact with it, you&amp;rsquo;ve decided to give it a simple animation. Something like the rotation around main pivot point, as seen by the colorful, little gems in Spyro.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/spyro-gems.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from one of the cave levels in Spyro Reignited Trilogy. To the front of the camera is Spyro. Next to him are a green and a blue gem. In the background there is a large spider and to the right of it are two more gems. Those are red.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;You like rewarding players and giving them sense of satisfaction and progression. As such you shower them in loot. Soon the level you have is packed with lots and lots of rotating in place items. Your FPS is down.&lt;/p&gt;
&lt;p&gt;If all of the above is the case, and if indeed your performance is low, then the reason might be exactly in the loot. More specifically, in the way you did the simple animation associated with it.&lt;/p&gt;
&lt;p&gt;There are two ways you could approach making this animation. One is through a Blueprint Actor that has moving component that gives the item a rotation on each game tick through the blueprint logic. The second way is through a custom material shader (&lt;em&gt;Material Graph&lt;/em&gt;) that rotates the loot through World Position Offset. There is also a third way, through an animation created in Blender or Maya and imported, but we will ignore that because most students and devs will prefer to do something as simple as rotation around pivot inside the engine itself, instead of going outside of it.&lt;/p&gt;
&lt;p&gt;For your FPS to be down, you&amp;rsquo;ve most likely picked the first option. You&amp;rsquo;ve created your loot as a blueprint that gets placed in a static location in the world. That blueprint then has the logic to rotate the item around, or make it hover up and down. By doing it through the blueprint you&amp;rsquo;ve inadvertently increased your draw calls by causing each placed instance of the loot to be a unique draw call.&lt;/p&gt;
&lt;p&gt;💎💎💎💎💎💎💎💎💎💎💎💎💎&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;The culprit here:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To make the item animate through a blueprint, you set the geometry to &lt;em&gt;&lt;strong&gt;&amp;ldquo;Movable&amp;rdquo;&lt;/strong&gt;&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;&lt;strong&gt;&amp;ldquo;Movable&amp;rdquo;&lt;/strong&gt;&lt;/em&gt; instead of &lt;em&gt;&lt;strong&gt;&amp;ldquo;Static&amp;rdquo;&lt;/strong&gt;&lt;/em&gt; game object always ends up in its own draw call;&lt;/li&gt;
&lt;li&gt;Introduce hundreds of those. They wont stack into one draw call, they will be hundreds of draw calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If instead you animate the object through the &lt;em&gt;&lt;strong&gt;Material Graph&lt;/strong&gt;&lt;/em&gt;, using &lt;em&gt;&lt;strong&gt;World Position Offset (WPO)&lt;/strong&gt;&lt;/em&gt; then your animation will end up being on the GPU. All objects using the material that animates them could be left to &lt;em&gt;&lt;strong&gt;&amp;ldquo;Static&amp;rdquo;&lt;/strong&gt;&lt;/em&gt; and still visually animate in movement. All of those objects would then bundle in draw calls.&lt;/p&gt;
&lt;p&gt;You would no longer be making hundreds and hundreds of needless draw calls that slow down your CPU.&lt;/p&gt;
&lt;p&gt;Your performance will increase. Your FPS will be higher.&lt;/p&gt;
&lt;p&gt;💎💎💎💎💎💎💎💎💎💎💎💎💎&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/pfeF1ONTRWQ&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;figure&gt;
&lt;figcaption&gt;Video embedded above. Title is &#34;Rotating Objects in UE4, Benchmarked (Get better FPS!)&#34; by YouTuber &#34;Pending Kill&#34;. The video is an excellent showcase of how one could do the different types of animation and what their performance would be.&lt;/figcaption&gt; &lt;!-- this is alt text --&gt;
&lt;/figure&gt;
&lt;p&gt;This video is the best showcase, and explanation, of everything I wrote above. I found it some time ago randomly and was very impressed by the great presentation in it. Give it a watch to learn more.&lt;/p&gt;
&lt;p&gt;The showcase is in UE4 but the inner workings are the same in UE5. As such if you found yourself making rotating loot, all of this info is still valid. It&amp;rsquo;s also the same way in Unity.&lt;/p&gt;
&lt;h3 id=&#34;overlapping-lights&#34;&gt;Overlapping Lights&lt;/h3&gt;
&lt;p&gt;Another aspect that can be incredibly influential over your performance is light. Depending on how you use &amp;ldquo;Point Lights&amp;rdquo; and &amp;ldquo;Spotlights&amp;rdquo; in your project, you might end up with a lot of overlaps in light that increase the cost of the light actors and drag down your performance.&lt;/p&gt;
&lt;p&gt;No matter if we are in UE5, UE4 or Unity, we need to be careful with movable, overlapping lights, and we need to be intelligent with the way we place those actors in the world.&lt;/p&gt;
&lt;div class =&#34;colorblock normal&#34;&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;p&gt;The goal is to always keep overlaps in lights low. Light actors should be placed with sensible attenuation radius and should not be stacked over one another, even when they have small radius.&lt;/p&gt;
    &lt;/div&gt;
&lt;h4 id=&#34;lights-example&#34;&gt;Lights Example&lt;/h4&gt;
&lt;p&gt;When we are talking about lighting that is realistic and looks cinematic and moody, the general artistic comment of &amp;ldquo;less is more&amp;rdquo; is even stronger than other mediums of art. As such, if we set up lighting in a smart way, we will get a better artistic visual through using less amount of point lights and spotlights. That will then result in better performance too, thanks to the already mentioned reasons.&lt;/p&gt;
&lt;p&gt;But lets explore some visual examples of lights overlapping. For that I will take a look at my project &lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/categories/amarantos-ritual/&#34;  title=&#34;_index.md&#34;
    &gt;&amp;rdquo;&lt;em&gt;&lt;strong&gt;The Amarantos Ritual&lt;/strong&gt;&lt;/em&gt;&amp;quot;&lt;/a&gt; (&lt;em&gt;check the link to read about its making!&lt;/em&gt;).&lt;/p&gt;
&lt;font size=&#34;2&#34;&gt;&lt;i&gt;Interactive element below. Move the white bar and arrows in the middle to see comparison between two images.&lt;/i&gt;&lt;/font&gt;


&lt;div class=&#34;imageDiv0&#34;&gt;
  &lt;div class=&#39;img background-img0&#39;&gt;&lt;/div&gt;
  &lt;div class=&#39;img foreground-img0&#39;&gt;&lt;/div&gt;
  &lt;input type=&#34;range&#34; min=&#34;1&#34; max=&#34;100&#34; value=&#34;50&#34; class=&#34;slider&#34; name=&#39;slider&#39; id=&#34;slider0&#34; oninput=&#34;moveDivisor(&amp;#34;0&amp;#34;)&#34;&gt;
  &lt;div class=&#39;slider-arrows0&#39;&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;figure&gt;
&lt;figcaption&gt;Two images overlaid on top of one another. First screenshot shows the final scene - blue crystal in the middle of a ruined interior full of roots and blue flowers. Secondary image overlays 2D sprites that showcase the point lights, spotlights and rectangular lights used.&lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;script src=&#34;https://petedimitrovart.com/js/imageDivisor.js&#34;&gt;&lt;/script&gt;

&lt;style&gt;
.imageDiv0 {
  position: relative;
  width: 100%;
  aspect-ratio: 1.7777777778;
  overflow: hidden;
  margin: auto;
  border: 0px solid white;  
}
.imageDiv0 .img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
}
.imageDiv0 .background-img0 {
  background-image: url(&#39;amarantos-light-complex-002.jpg&#39;);
}
.imageDiv0 .foreground-img0 {
  background-image: url(&#39;amarantos-light-complex-001.jpg&#39;);
  width: 50%;
}
.imageDiv0 .slider {
  position: absolute;
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 100%;
  background: rgba(33, 33, 33, 0.2);  
  outline: none;
  margin: 0;
  transition: all 0.2s;
  display: flex;
  justify-content: center;
  align-items: center;
}
.imageDiv0 .slider:hover {
  background: rgba(255, 255, 255, 0);  
}
.imageDiv0 .slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 3px;
  height: 600px;
  background: rgba(242, 242, 242, 0.5);
  cursor: pointer;
}
.imageDiv0 .slider::-moz-range-thumb {
  width: 1px;
  height: 600px;
  background: rgba(242, 242, 242, 0.5);
  cursor: pointer;
}
.imageDiv0 .slider-arrows0 {
  pointer-events: none;
  position: absolute;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: rgba(242, 242, 242, 0.5);  
  left: calc(50% - 18px);
  top: calc(99% - 18px);
  display: flex;
  justify-content: center;
  align-items: center;
}
.imageDiv0 .slider-arrows0:after {
  content: &#39;&#39;;
  padding: 3px;
  display: inline-block;
  border: solid #5d5d5d;
  border-width: 0 2px 2px 0;
  transform: rotate(-45deg);
}
.imageDiv0 .slider-arrows0:before {
  content: &#39;&#39;;
  padding: 3px;
  display: inline-block;
  border: solid #5d5d5d;
  border-width: 0 2px 2px 0;
  transform: rotate(135deg);
}

&lt;/style&gt;
&lt;p&gt;In the comparison images above we first see the final scene. The secondary screenshot overlays on top the billboards of the lights, showcasing their position in the world.&lt;/p&gt;
&lt;p&gt;If with the UE5 scene open, we click on the viewport and then we press &lt;strong&gt;&amp;ldquo;ALT + 7&amp;rdquo;&lt;/strong&gt; on the keyboard, we will go into &amp;ldquo;&lt;em&gt;&lt;strong&gt;Light Complexity&lt;/strong&gt;&lt;/em&gt;&amp;rdquo;. That is an &amp;ldquo;&lt;em&gt;&lt;strong&gt;Optimization Viewmode&lt;/strong&gt;&lt;/em&gt;&amp;rdquo;. In the secondary image below, we can see lots of blue, green and red colors. That&amp;rsquo;s the light complexity view mode.&lt;/p&gt;
&lt;font size=&#34;2&#34;&gt;&lt;i&gt;Interactive element below. Move the white bar and arrows in the middle to see comparison between two images.&lt;/i&gt;&lt;/font&gt;


&lt;div class=&#34;imageDiv1&#34;&gt;
  &lt;div class=&#39;img background-img1&#39;&gt;&lt;/div&gt;
  &lt;div class=&#39;img foreground-img1&#39;&gt;&lt;/div&gt;
  &lt;input type=&#34;range&#34; min=&#34;1&#34; max=&#34;100&#34; value=&#34;50&#34; class=&#34;slider&#34; name=&#39;slider&#39; id=&#34;slider1&#34; oninput=&#34;moveDivisor(&amp;#34;1&amp;#34;)&#34;&gt;
  &lt;div class=&#39;slider-arrows1&#39;&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;figure&gt;
&lt;figcaption&gt;First is the image seen before - the UE5 scene with the crystal, 2D sprites showing lights toggled. Second image on top is a -Light Complexity- view mode. It shows the scene in flat silhouettes. Those are colored between deep blue, green, yellow, orange, red and purple and white. Each color corresponds to a complexity in the light, dragging performance down. Transcription to what each color represents is in the following paragraph below.&lt;/figcaption&gt; 
&lt;/figure&gt;

&lt;script src=&#34;https://petedimitrovart.com/js/imageDivisor.js&#34;&gt;&lt;/script&gt;

&lt;style&gt;
.imageDiv1 {
  position: relative;
  width: 100%;
  aspect-ratio: 1.7777777778;
  overflow: hidden;
  margin: auto;
  border: 0px solid white;  
}
.imageDiv1 .img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
}
.imageDiv1 .background-img1 {
  background-image: url(&#39;amarantos-light-complex-003.jpg&#39;);
}
.imageDiv1 .foreground-img1 {
  background-image: url(&#39;amarantos-light-complex-002.jpg&#39;);
  width: 50%;
}
.imageDiv1 .slider {
  position: absolute;
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 100%;
  background: rgba(33, 33, 33, 0.2);  
  outline: none;
  margin: 0;
  transition: all 0.2s;
  display: flex;
  justify-content: center;
  align-items: center;
}
.imageDiv1 .slider:hover {
  background: rgba(255, 255, 255, 0);  
}
.imageDiv1 .slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 3px;
  height: 600px;
  background: rgba(242, 242, 242, 0.5);
  cursor: pointer;
}
.imageDiv1 .slider::-moz-range-thumb {
  width: 1px;
  height: 600px;
  background: rgba(242, 242, 242, 0.5);
  cursor: pointer;
}
.imageDiv1 .slider-arrows1 {
  pointer-events: none;
  position: absolute;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: rgba(242, 242, 242, 0.5);  
  left: calc(50% - 18px);
  top: calc(99% - 18px);
  display: flex;
  justify-content: center;
  align-items: center;
}
.imageDiv1 .slider-arrows1:after {
  content: &#39;&#39;;
  padding: 3px;
  display: inline-block;
  border: solid #5d5d5d;
  border-width: 0 2px 2px 0;
  transform: rotate(-45deg);
}
.imageDiv1 .slider-arrows1:before {
  content: &#39;&#39;;
  padding: 3px;
  display: inline-block;
  border: solid #5d5d5d;
  border-width: 0 2px 2px 0;
  transform: rotate(135deg);
}

&lt;/style&gt;
&lt;p&gt;The legend of how to read the view mode comes in the form of the long, color gradient bar in the lower parts of the screen. It reads as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Deep blues to light blues - little overlaps;&lt;/li&gt;
&lt;li&gt;Green to yellow - medium overlaps;&lt;/li&gt;
&lt;li&gt;Orange to deep red - a lot of overlaps;&lt;/li&gt;
&lt;li&gt;Purple to white - extremely high amount of overlaps.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Or in flashy, absolutely needless, colors that I spend way too long writing code for, given that I will probably never reuse in the future of this blog &lt;em&gt;(I mean, behold how ugly it is!)&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;
&lt;style&gt;
    .gradient-text {
        font-size: 20px;
        font-weight: bold;
        font-family: Arial, sans-serif;
    }
    .gradient-text-custom0 {
        background: linear-gradient(to right, #3240ac, #6aacd8 60%);
        -webkit-background-clip: text;
        color: transparent;
    }
&lt;/style&gt;
&lt;p class=&#34;gradient-text gradient-text-custom0&#34;&gt;1. Deep blues to light blues - little overlaps;&lt;/p&gt;

&lt;style&gt;
    .gradient-text {
        font-size: 20px;
        font-weight: bold;
        font-family: Arial, sans-serif;
    }
    .gradient-text-custom1 {
        background: linear-gradient(to right, #00c252, #f7d62e 30%);
        -webkit-background-clip: text;
        color: transparent;
    }
&lt;/style&gt;
&lt;p class=&#34;gradient-text gradient-text-custom1&#34;&gt;2. Green to yellow - medium overlaps;&lt;/p&gt;

&lt;style&gt;
    .gradient-text {
        font-size: 20px;
        font-weight: bold;
        font-family: Arial, sans-serif;
    }
    .gradient-text-custom3 {
        background: linear-gradient(to right, #f66703, #a90019 50%);
        -webkit-background-clip: text;
        color: transparent;
    }
&lt;/style&gt;
&lt;p class=&#34;gradient-text gradient-text-custom3&#34;&gt;3. Orange to deep red - a lot of overlaps;&lt;/p&gt;

&lt;style&gt;
    .gradient-text {
        font-size: 20px;
        font-weight: bold;
        font-family: Arial, sans-serif;
    }
    .gradient-text-custom4 {
        background: linear-gradient(to right, #931e93, #fee4e5 70%);
        -webkit-background-clip: text;
        color: transparent;
    }
&lt;/style&gt;
&lt;p class=&#34;gradient-text gradient-text-custom4&#34;&gt;4. Purple to white - extremely high amount of overlaps.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;The bigger amount of lights affecting a surface (&lt;em&gt;overlapping there&lt;/em&gt;), the more expensive to render that surface becomes. The colors indicate that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blue - surface only affected by your Directional Light.&lt;/li&gt;
&lt;li&gt;Green - surface affected by your Dir Light + one more light.&lt;/li&gt;
&lt;li&gt;&amp;hellip;..&lt;/li&gt;
&lt;li&gt;Red - surface affected by up to 5 different lights.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When we are working on our lighting set up, we want to check this light complexity view mode from time to time. That is in order to track if we get big &amp;ldquo;offenders&amp;rdquo; in overlapping lights. If we see any, we want to select the light and under its settings tweak the &amp;ldquo;Attenuation Radius&amp;rdquo; down.&lt;/p&gt;
&lt;p&gt;In the gif below, we can see me doing exactly that with two point lights:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/amarantos-lights-anim.gif&#34;
	width=&#34;1539&#34;
	height=&#34;1012&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Frame gif animation. Shows a camera angle facing one of the corners of the Amarantos Ritual environment. There are lots of roots and props seen in the first frame. Second frame shows billboards of lights on top. Third frame switches to &amp;ldquo;Light Complexity&amp;rdquo; type of &amp;ldquo;Optimization Viewmode&amp;rdquo;. All the colors go from dark blue to red to white, each indicating bad light complexity through light overlaps.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;364px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Note how in the middle of the gif above playing, when spectating the optimization view mode, the colors change from purples and whites to bit more reds. That is the frame where I selected two Point Lights. They had &amp;ldquo;Attenuation Radius&amp;rdquo; setting of 300. I toned them down to a radius of 100.&lt;/p&gt;
&lt;p&gt;If you observe the change between the final frame and the first one, you see before-and-after. Indeed there is a difference in how the lighting looks. But the lesson here is that there are lots of situation in which you might needlessly have a large amount of attenuation radius. If you go into the setting and dial it down slowly, you might see that the first many numbers you go down through might not change the visual at all. But in the background, it will change the overlap in light and it will optimize your scene further.&lt;/p&gt;
&lt;h4 id=&#34;lights-art-control&#34;&gt;Lights Art Control&lt;/h4&gt;
&lt;p&gt;Lets mention the &lt;strong&gt;&amp;ldquo;less is more&amp;rdquo;&lt;/strong&gt; part again though.&lt;/p&gt;
&lt;p&gt;I want to point out once more, that when we have less amount of lights in a scene, they are actually artistically easier to direct and control. As such a well lit, moody and beautiful scene, will more often be build up of the elegance of a few large lights, as opposed to a constellation of many tiny lights.&lt;/p&gt;
&lt;p&gt;Keep that in mind and study movies and cinematic direction in order to learn how to see the simplicity and elegance of use of light in broad strokes, instead of tiny ones. That will make you better at lighting as art, but it will coincidentally make your scenes more optimized as well.&lt;/p&gt;
&lt;p&gt;Reference is queen here so you always want to find good photographs and movie stills to base your lighting work off of.&lt;/p&gt;
&lt;h4 id=&#34;baked-lights&#34;&gt;Baked Lights&lt;/h4&gt;
&lt;p&gt;In a more old-fashioned lighting set up, where one relies on stationary lights that will be baked, overlapping lights might not be nearly as big of an issue. That set up is commonly seen in UE4 and Unity.&lt;/p&gt;
&lt;p&gt;As already explored, in a more modern lighting set up, where nearly all of the lights are movable and will not be baked at all, overlapping lights can have a detrimental affect on your performance. This lighting set up is what we most commonly see in UE5 and Lumen.&lt;/p&gt;
&lt;p&gt;Even if you project is in UE5, if you are a student that is looking to expand their knowledge and find their first break into the industry, I would say that its worth looking up how to create good lightmaps for assets. Those lightmaps will then allow you, with the right settings, to bake most of your lights in your scene.&lt;/p&gt;
&lt;p&gt;Lots of next gen games that are build in UE5 don&amp;rsquo;t use baked lights. But lots of games still use baked lights (&lt;em&gt;for example most projects I&amp;rsquo;ve worked on over at Rebellion&lt;/em&gt;). The technique is incredibly good and beneficial, with little drawbacks to the art and big wins in the performance, when done the right way. As such its something commonly found in lots of studios out there and you having some knowledge in it will put you ahead of a lot of other candidates that might compete with you in a job search.&lt;/p&gt;
&lt;h4 id=&#34;gpu-profiling-tool&#34;&gt;GPU Profiling Tool&lt;/h4&gt;
&lt;p&gt;You can see how well, or bad, your lights are performing directly into the GPU profiler tool that Unreal provides as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/gpu-profiler-001.jpg&#34;
	width=&#34;1344&#34;
	height=&#34;925&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE5 screenshot from the scene seen before. This time around on top of the UI is overlaid a new window. It&amp;rsquo;s called GPU Visualizer and it lists a few things. One is &amp;ldquo;Scene&amp;rdquo; that is then followed by multi colored bar. Each color represents different cost. An orange annotation arrow points at a green section and a text annotation says &amp;ldquo;Press the green bar to see &amp;ldquo;Lights&amp;rdquo; info.&amp;rdquo;. Explanation how to open this entire window is in the paragraphs below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;348px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This tool is incredibly beneficial as it lists the costs to anything that ends up on the GPU. In the cases where you know that your graphics are dragging you down, and that you might be GPU-bound, you can use that screen to analyze what needs improving.&lt;/p&gt;
&lt;p&gt;Just like the time we clicked the Unreal cmd in the lower left corner of the screen to type &amp;ldquo;stat scenerendering&amp;rdquo; we can now use it to instead call this GPU tool.&lt;/p&gt;
&lt;p&gt;Click the cmd and type &amp;ldquo;Profile GPU&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;l&#34;&gt;profile gpu&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then hit &amp;ldquo;Enter&amp;rdquo; on the keyboard. The profiler window will open.&lt;/p&gt;
&lt;p&gt;In the first image above, we can see that there is a long bar colored in different regions. Each of those represents a different cost that is on the GPU. Hovering over the teal-green colored section in my case, I saw that its listed as &amp;ldquo;Lights&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I clicked on that and it expanded into the image below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/gpu-profiler-002.jpg&#34;
	width=&#34;1344&#34;
	height=&#34;925&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Same screenshot as before but now the teal-green section of the multi-color bar is highlighted. That has expanded a lower portion of the screen that lists &amp;ldquo;Lights &amp;ndash; Direct Lighting &amp;ndash; Unbatched Lights&amp;rdquo;. In there are lots of Point Lights. Each has a different cost listed as duration (ms) on the right side. Yellow text is transcribed below.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;348px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After selecting to take a closer look at the lights, we can see them listed in the category below. If the &lt;strong&gt;ms&lt;/strong&gt; listed in this category is very high, then the performance is bad and your FPS will be low.&lt;/p&gt;
&lt;p&gt;Apart from the lights, this tool allows you to nicely observe if there are other performance issues as well.&lt;/p&gt;
&lt;p&gt;An example from an old project of mine is one time when I was having incredibly poor FPS. I ran the GPU Profiler Viz and I could see that the &amp;ldquo;Hair Groom&amp;rdquo; actors associated with my Metahuman in the scene was giving incredibly hard time to my GTX 1070. I disabled the hair, put a helmet on the metahuman, and started saving up for a newer gen GPU that could handle it.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/draw-call-tips-students-art-level-design/draw-call-tip-001.jpg&#34;
	width=&#34;3832&#34;
	height=&#34;2268&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE5 screenshot from a 2022 blockout project I made in my spare time. It showcases a water world where on the surface there are giant walls. On top of the walls are portal devices that have a liquid-like VFX connecting the two gates.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;405px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In this lengthy blog post, we explore common reasons for low performance in projects. That is in both environment art projects and level design blockouts.&lt;/p&gt;
&lt;p&gt;We looked at some ideas of how to handle and fix the issues. We explored draw calls, static meshes and BSP brushes. We looked at how to convert BSP brushes into static meshes that are more manageable in draw calls.&lt;/p&gt;
&lt;p&gt;Next we looked at blueprints actors and how faulty default settings might cause high draw calls. From there we went into animating simple drop. Finally we explored lights and what overlapping lights are.&lt;/p&gt;
&lt;p&gt;The tooling that we explored, like the &amp;ldquo;scenerendering&amp;rdquo; and &amp;ldquo;GPU profiler&amp;rdquo; are incredibly powerful. I mentioned some ways to look at those and analyze your work. The screens list lots and lots more useful data though. It&amp;rsquo;s data that is too much to explore in a single blog post. As such I shall leave you to analyze and perfect your performance further by looking at all of that.&lt;/p&gt;
&lt;p&gt;One final thing that I would like to mention, that we didn&amp;rsquo;t get the time to cover in this post either, is that what we do in blueprints when it comes to scripting and to logic behind implementing gameplay, can of course, also affect performance.&lt;/p&gt;
&lt;p&gt;As such make sure you not only spend your energy profiling your graphics, but try to optimize and make sure the logic of your blueprints, code and gameplay is also well created.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you enjoyed this blog post, consider subscribing in the form below. That way you will get a notification the next time I publish a new blog.&lt;/em&gt;&lt;/p&gt;
&lt;style type=&#34;text/css&#34;&gt;@import url(&#34;https://assets.mlcdn.com/fonts.css?version=1711021&#34;);&lt;/style&gt;
    &lt;style type=&#34;text/css&#34;&gt;
     
    .ml-form-embedSubmitLoad {
      display: inline-block;
      width: 20px;
      height: 20px;
    }

    .g-recaptcha {
    transform: scale(1);
    -webkit-transform: scale(1);
    transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    height: ;
    }

    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0,0,0,0);
      border: 0;
    }

    .ml-form-embedSubmitLoad:after {
      content: &#34; &#34;;
      display: block;
      width: 11px;
      height: 11px;
      margin: 1px;
      border-radius: 50%;
      border: 4px solid #fff;
    border-color: #ffffff #ffffff #ffffff transparent;
    animation: ml-form-embedSubmitLoad 1.2s linear infinite;
    }
    @keyframes ml-form-embedSubmitLoad {
      0% {
      transform: rotate(0deg);
      }
      100% {
      transform: rotate(360deg);
      }
    }
      #mlb2-13430639.ml-form-embedContainer {
        box-sizing: border-box;
        display: table;
        margin: 0 auto;
        position: static;
        width: 100% !important;
      }
      #mlb2-13430639.ml-form-embedContainer h4,
      #mlb2-13430639.ml-form-embedContainer p,
      #mlb2-13430639.ml-form-embedContainer span,
      #mlb2-13430639.ml-form-embedContainer button {
        text-transform: none !important;
        letter-spacing: normal !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper {
        background-color: #101014;
        
        border-width: 0px;
        border-color: transparent;
        border-radius: 4px;
        border-style: solid;
        box-sizing: border-box;
        display: inline-block !important;
        margin: 0;
        padding: 0;
        position: relative;
              }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper.embedPopup,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper.embedDefault { width: 610px; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper.embedForm { max-width: 610px; width: 100%; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-left { text-align: left; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-center { text-align: center; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-default { display: table-cell !important; vertical-align: middle !important; text-align: center !important; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-right { text-align: right; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedHeader img {
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        height: auto;
        margin: 0 auto !important;
        max-width: 100%;
        width: 1024px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody {
        padding: 20px 20px 0 20px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody.ml-form-embedBodyHorizontal {
        padding-bottom: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent {
        text-align: left;
        margin: 0 0 20px 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent h4,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent h4 {
        color: #ffffff;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 30px;
        font-weight: 400;
        margin: 0 0 10px 0;
        text-align: left;
        word-break: break-word;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent p,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent p {
        color: #ffffff;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px;
        font-weight: 400;
        line-height: 20px;
        margin: 0 0 10px 0;
        text-align: left;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ul,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ol,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ul,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ol {
        color: #ffffff;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ol ol,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ol ol {
        list-style-type: lower-alpha;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ol ol ol,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ol ol ol {
        list-style-type: lower-roman;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent p a,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent p a {
        color: #000000;
        text-decoration: underline;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-block-form .ml-field-group {
        text-align: left!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-block-form .ml-field-group label {
        margin-bottom: 5px;
        color: #ffffff;
        font-size: 14px;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-weight: bold; font-style: normal; text-decoration: none;;
        display: inline-block;
        line-height: 20px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent p:last-child,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent p:last-child {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody form {
        margin: 0;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-formContent,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow {
        margin: 0 0 20px 0;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow {
        float: left;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-formContent.horozintalForm {
        margin: 0;
        padding: 0 0 20px 0;
        width: 100%;
        height: auto;
        float: left;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow {
        margin: 0 0 10px 0;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow.ml-last-item {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow.ml-formfieldHorizintal {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input {
        background-color: #ffffff !important;
        color: #333333 !important;
        border-color: #428beb;
        border-radius: 4px !important;
        border-style: solid !important;
        border-width: 0px !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px !important;
        height: auto;
        line-height: 21px !important;
        margin-bottom: 0;
        margin-top: 0;
        margin-left: 0;
        margin-right: 0;
        padding: 10px 10px !important;
        width: 100% !important;
        box-sizing: border-box !important;
        max-width: 100% !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input::-webkit-input-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input::-webkit-input-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input::-moz-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input::-moz-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input:-ms-input-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input:-ms-input-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input:-moz-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input:-moz-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow textarea, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow textarea {
        background-color: #ffffff !important;
        color: #333333 !important;
        border-color: #428beb;
        border-radius: 4px !important;
        border-style: solid !important;
        border-width: 0px !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px !important;
        height: auto;
        line-height: 21px !important;
        margin-bottom: 0;
        margin-top: 0;
        padding: 10px 10px !important;
        width: 100% !important;
        box-sizing: border-box !important;
        max-width: 100% !important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before {
          border-color: #428beb!important;
          background-color: #ffffff!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input.custom-control-input[type=&#34;checkbox&#34;]{
        box-sizing: border-box;
        padding: 0;
        position: absolute;
        z-index: -1;
        opacity: 0;
        margin-top: 5px;
        margin-left: -1.5rem;
        overflow: visible;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before {
        border-radius: 4px!important;
      }


      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow input[type=checkbox]:checked~.label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox input[type=checkbox]:checked~.label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-input:checked~.custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-input:checked~.custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox input[type=checkbox]:checked~.label-description::after {
        background-image: url(&#34;data:image/svg+xml,%3csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 8 8&#39;%3e%3cpath fill=&#39;%23fff&#39; d=&#39;M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z&#39;/%3e%3c/svg%3e&#34;);
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input:checked~.custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input:checked~.custom-control-label::after {
        background-image: url(&#34;data:image/svg+xml,%3csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;-4 -4 8 8&#39;%3e%3ccircle r=&#39;3&#39; fill=&#39;%23fff&#39;/%3e%3c/svg%3e&#34;);
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox input[type=checkbox]:checked~.label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox input[type=checkbox]:checked~.label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow input[type=checkbox]:checked~.label-description::before  {
          border-color: #000000!important;
          background-color: #000000!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::after {
           top: 2px;
           box-sizing: border-box;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
           top: 0px!important;
           box-sizing: border-box!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
        top: 0px!important;
           box-sizing: border-box!important;
      }

       #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::after {
            top: 0px!important;
            box-sizing: border-box!important;
            position: absolute;
            left: -1.5rem;
            display: block;
            width: 1rem;
            height: 1rem;
            content: &#34;&#34;;
       }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before {
        top: 0px!important;
        box-sizing: border-box!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-control-label::before {
          position: absolute;
          top: 4px;
          left: -1.5rem;
          display: block;
          width: 16px;
          height: 16px;
          pointer-events: none;
          content: &#34;&#34;;
          background-color: #ffffff;
          border: #adb5bd solid 1px;
          border-radius: 50%;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-control-label::after {
          position: absolute;
          top: 2px!important;
          left: -1.5rem;
          display: block;
          width: 1rem;
          height: 1rem;
          content: &#34;&#34;;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before {
          position: absolute;
          top: 4px;
          left: -1.5rem;
          display: block;
          width: 16px;
          height: 16px;
          pointer-events: none;
          content: &#34;&#34;;
          background-color: #ffffff;
          border: #adb5bd solid 1px;
          border-radius: 50%;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::after {
          position: absolute;
          top: 0px!important;
          left: -1.5rem;
          display: block;
          width: 1rem;
          height: 1rem;
          content: &#34;&#34;;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
          position: absolute;
          top: 0px!important;
          left: -1.5rem;
          display: block;
          width: 1rem;
          height: 1rem;
          content: &#34;&#34;;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-radio .custom-control-label::after {
          background: no-repeat 50%/50% 50%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-checkbox .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
          background: no-repeat 50%/50% 50%;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-control, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-control {
        position: relative;
        display: block;
        min-height: 1.5rem;
        padding-left: 1.5rem;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-input, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-input, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-input {
          position: absolute;
          z-index: -1;
          opacity: 0;
          box-sizing: border-box;
          padding: 0;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label {
          color: #ffffff;
          font-size: 12px!important;
          font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
          line-height: 22px;
          margin-bottom: 0;
          position: relative;
          vertical-align: top;
          font-style: normal;
          font-weight: 700;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-select, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-select {
        background-color: #ffffff !important;
        color: #333333 !important;
        border-color: #428beb;
        border-radius: 4px !important;
        border-style: solid !important;
        border-width: 0px !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px !important;
        line-height: 20px !important;
        margin-bottom: 0;
        margin-top: 0;
        padding: 10px 28px 10px 12px !important;
        width: 100% !important;
        box-sizing: border-box !important;
        max-width: 100% !important;
        height: auto;
        display: inline-block;
        vertical-align: middle;
        background: url(&#39;https://assets.mlcdn.com/ml/images/default/dropdown.svg&#39;) no-repeat right .75rem center/8px 10px;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
      }


      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow {
        height: auto;
        width: 100%;
        float: left;
      }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-input-horizontal { width: 70%; float: left; }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-button-horizontal { width: 30%; float: left; }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-button-horizontal.labelsOn { padding-top: 25px;  }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .horizontal-fields { box-sizing: border-box; float: left; padding-right: 10px;  }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input {
        background-color: #ffffff;
        color: #333333;
        border-color: #428beb;
        border-radius: 4px;
        border-style: solid;
        border-width: 0px;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px;
        line-height: 20px;
        margin-bottom: 0;
        margin-top: 0;
        padding: 10px 10px;
        width: 100%;
        box-sizing: border-box;
        overflow-y: initial;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow button {
        background-color: #428beb !important;
        border-color: #428beb;
        border-style: solid;
        border-width: 0px;
        border-radius: 4px;
        box-shadow: none;
        color: #ffffff !important;
        cursor: pointer;
        font-family: Arial, Helvetica, sans-serif;
        font-size: 18px !important;
        font-weight: 400;
        line-height: 20px;
        margin: 0 !important;
        padding: 10px !important;
        width: 100%;
        height: auto;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow button:hover {
        background-color: #9fc0ee !important;
        border-color: #9fc0ee !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow input[type=&#34;checkbox&#34;] {
        box-sizing: border-box;
        padding: 0;
        position: absolute;
        z-index: -1;
        opacity: 0;
        margin-top: 5px;
        margin-left: -1.5rem;
        overflow: visible;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description {
        color: #000000;
        display: block;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 12px;
        text-align: left;
        margin-bottom: 0;
        position: relative;
        vertical-align: top;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label {
        font-weight: normal;
        margin: 0;
        padding: 0;
        position: relative;
        display: block;
        min-height: 24px;
        padding-left: 24px;

      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label a {
        color: #000000;
        text-decoration: underline;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label p {
        color: #000000 !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif !important;
        font-size: 12px !important;
        font-weight: normal !important;
        line-height: 18px !important;
        padding: 0 !important;
        margin: 0 5px 0 0 !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label p:last-child {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit {
        margin: 0 0 20px 0;
        float: left;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit button {
        background-color: #428beb !important;
        border: none !important;
        border-radius: 4px !important;
        box-shadow: none !important;
        color: #ffffff !important;
        cursor: pointer;
        font-family: Arial, Helvetica, sans-serif !important;
        font-size: 18px !important;
        font-weight: 400 !important;
        line-height: 21px !important;
        height: auto;
        padding: 10px !important;
        width: 100% !important;
        box-sizing: border-box !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit button.loading {
        display: none;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit button:hover {
        background-color: #9fc0ee !important;
      }
      .ml-subscribe-close {
        width: 30px;
        height: 30px;
        background: url(&#39;https://assets.mlcdn.com/ml/images/default/modal_close.png&#39;) no-repeat;
        background-size: 30px;
        cursor: pointer;
        margin-top: -10px;
        margin-right: -10px;
        position: absolute;
        top: 0;
        right: 0;
      }
      .ml-error input, .ml-error textarea, .ml-error select {
        border-color: red!important;
      }

      .ml-error .custom-checkbox-radio-list {
        border: 1px solid red !important;
        border-radius: 4px;
        padding: 10px;
      }

      .ml-error .label-description,
      .ml-error .label-description p,
      .ml-error .label-description p a,
      .ml-error label:first-child {
        color: #ff0000 !important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow.ml-error .label-description p,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow.ml-error .label-description p:first-letter {
        color: #ff0000 !important;
      }
            @media only screen and (max-width: 610px){

        .ml-form-embedWrapper.embedDefault, .ml-form-embedWrapper.embedPopup { width: 100%!important; }
        .ml-form-formContent.horozintalForm { float: left!important; }
        .ml-form-formContent.horozintalForm .ml-form-horizontalRow { height: auto!important; width: 100%!important; float: left!important; }
        .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-input-horizontal { width: 100%!important; }
        .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-input-horizontal &gt; div { padding-right: 0px!important; padding-bottom: 10px; }
        .ml-form-formContent.horozintalForm .ml-button-horizontal { width: 100%!important; }
        .ml-form-formContent.horozintalForm .ml-button-horizontal.labelsOn { padding-top: 0px!important; }

      }
    &lt;/style&gt;

    
  
    
    

    
    

    
    

    

      
        
        
      

      
        
        
      

      

            
            
            
            
            
            
      

      

      
        
        
         
        
        
      

        
        
        
        
        
        
      

       

        
        
        
        
        
        
        
       


      
        
        
        
        
  



  
        
        
        
      


      
    
    
    
    
    
    
    
  

  
        
        
        
        
        
      

      
        
        
        
        
        
      

      
        
        
        
        
        
      

       

        
        
        
        
       

       
        
        
        
        
      

      
        
        
        
        
        
        
        
       

    

    


      


      

      
      

      

      





    

      
    &lt;div id=&#34;mlb2-13430639&#34; class=&#34;ml-form-embedContainer ml-subscribe-form ml-subscribe-form-13430639&#34;&gt;
      &lt;div class=&#34;ml-form-align-center &#34;&gt;
        &lt;div class=&#34;ml-form-embedWrapper embedForm&#34;&gt;

          
          

          &lt;div class=&#34;ml-form-embedBody ml-form-embedBodyDefault row-form&#34;&gt;

            &lt;div class=&#34;ml-form-embedContent&#34; style=&#34; &#34;&gt;
              
                &lt;h4&gt;Future blog posts...&lt;/h4&gt;
                &lt;p&gt;&lt;em&gt;Sign up for notifications of new blog posts!&lt;/em&gt;&lt;/p&gt;
              
            &lt;/div&gt;

            &lt;form class=&#34;ml-block-form&#34; action=&#34;https://assets.mailerlite.com/jsonp/881513/forms/116531059128009787/subscribe&#34; data-code=&#34;&#34; method=&#34;post&#34; target=&#34;_blank&#34;&gt;
              &lt;div class=&#34;ml-form-formContent&#34;&gt;
                

                  
                  &lt;div class=&#34;ml-form-fieldRow ml-last-item&#34;&gt;
                    &lt;div class=&#34;ml-field-group ml-field-email ml-validate-email ml-validate-required&#34;&gt;

                      


                      
                      &lt;input aria-label=&#34;email&#34; aria-required=&#34;true&#34; type=&#34;email&#34; class=&#34;form-control&#34; data-inputmask=&#34;&#34; name=&#34;fields[email]&#34; placeholder=&#34;enter your email&#34; autocomplete=&#34;email&#34;&gt;
                      

                      
                      
                      

                      
                      
                      

                      
            
            

                      
                      
                      

                      
                      
                      





                    &lt;/div&gt;
                  &lt;/div&gt;
                
              &lt;/div&gt;

              

              
              
              

              

              

              



&lt;div class=&#34;ml-form-recaptcha ml-validate-required&#34; style=&#34;float: left;&#34;&gt;
                &lt;style type=&#34;text/css&#34;&gt;
  .ml-form-recaptcha {
    margin-bottom: 20px;
  }

  .ml-form-recaptcha.ml-error iframe {
    border: solid 1px #ff0000;
  }

  @media screen and (max-width: 480px) {
    .ml-form-recaptcha {
      width: 220px!important
    }
    .g-recaptcha {
      transform: scale(0.78);
      -webkit-transform: scale(0.78);
      transform-origin: 0 0;
      -webkit-transform-origin: 0 0;
    }
  }
&lt;/style&gt;
  &lt;script src=&#34;https://www.google.com/recaptcha/api.js&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;g-recaptcha&#34; data-sitekey=&#34;6Lf1KHQUAAAAAFNKEX1hdSWCS3mRMv4FlFaNslaD&#34;&gt;&lt;/div&gt;
&lt;/div&gt;


              
              &lt;input type=&#34;hidden&#34; name=&#34;ml-submit&#34; value=&#34;1&#34;&gt;

              &lt;div class=&#34;ml-form-embedSubmit&#34;&gt;
                
                  &lt;button type=&#34;submit&#34; class=&#34;primary&#34;&gt;Subscribe&lt;/button&gt;
                
                &lt;button disabled=&#34;disabled&#34; style=&#34;display: none;&#34; type=&#34;button&#34; class=&#34;loading&#34;&gt;
                  &lt;div class=&#34;ml-form-embedSubmitLoad&#34;&gt;&lt;/div&gt;
                  &lt;span class=&#34;sr-only&#34;&gt;Loading...&lt;/span&gt;
                &lt;/button&gt;
              &lt;/div&gt;

              
              &lt;input type=&#34;hidden&#34; name=&#34;anticsrf&#34; value=&#34;true&#34;&gt;
            &lt;/form&gt;
          &lt;/div&gt;

          &lt;div class=&#34;ml-form-successBody row-success&#34; style=&#34;display: none&#34;&gt;

            &lt;div class=&#34;ml-form-successContent&#34;&gt;
              
                &lt;h4&gt;Thank you!&lt;/h4&gt;
                
                  &lt;p&gt;You have successfully joined our subscriber list.&lt;/p&gt;
                
              
            &lt;/div&gt;

          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

  

  
  
  &lt;script&gt;
    function ml_webform_success_13430639() {
      var $ = ml_jQuery || jQuery;
      $(&#39;.ml-subscribe-form-13430639 .row-success&#39;).show();
      $(&#39;.ml-subscribe-form-13430639 .row-form&#39;).hide();
    }
      &lt;/script&gt;
  
  
      &lt;script src=&#34;https://groot.mailerlite.com/js/w/webforms.min.js?v2d8fb22bb5b3677f161552cd9e774127&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;
        &lt;script&gt;
            fetch(&#34;https://assets.mailerlite.com/jsonp/881513/forms/116531059128009787/takel&#34;)
        &lt;/script&gt;
&lt;hr&gt;
&lt;p&gt;Have fun creating your art and level designs,&lt;/p&gt;
&lt;p&gt;Pete.&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        <item>
        <title>Vortex VFX Tutorial - Index</title>
        <link>https://petedimitrovart.com/p/vortexvfxindex/</link>
        <pubDate>Mon, 25 Sep 2023 16:46:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/vortexvfxindex/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/vortexvfxindex/vortexvfx-c.png" alt="Featured image of post Vortex VFX Tutorial - Index" /&gt;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;In this tutorial series, we will create a vortex VFX basin in Unreal 5. We will go to the creation of geometry, textures and shaders needed for it. Finally we will take a look at blueprints and how to use them to improve the efficiency of our game assets.&lt;/p&gt;
&lt;p&gt;This tutorial is in 5 parts. This blog page will index those pages and list them for an easier look at all of it.&lt;/p&gt;
&lt;h2 id=&#34;videos-preview&#34;&gt;Videos Preview&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/4y6RyrYRb0o&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above, showcasing the final vortex VFX we will be creating.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/mFvhWQ9ot0M&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above. Shows the VFX basin duplicated three times. One is blue, the other is purple, the last one is green.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;page-links&#34;&gt;Page Links&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-005-tut01/&#34;  title=&#34;index.md&#34;
    &gt;Part One - Let&amp;rsquo;s make a liquid magic VFX Vortex. Creating the static geometry.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;  title=&#34;index.md&#34;
    &gt;Part Two - Creating textures for the liquid VFX vortex. Substance Designer work.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;  title=&#34;index.md&#34;
    &gt;Part Three - Making polar coordinates shader in UE5. Circular distortion shader.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-008-tut04/&#34;  title=&#34;index.md&#34;
    &gt;Part Four - Creating refraction shader in UE5. Adding it as a layer of detail on the vortex.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/&#34;  title=&#34;index.md&#34;
    &gt;Part Five - Improving the efficiency of our work through blueprints and construction scripts.&lt;/a&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Software:&lt;/p&gt;
    &lt;p&gt;The tutorial covers Unreal Engine 5, Blender, Substance Designer. You could follow along using Maya and Unreal Engine 4 for replacements.&lt;/p&gt;
    &lt;/div&gt;
&lt;h2 id=&#34;page-cards&#34;&gt;Page Cards&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Alternatively, click on these preview cards to go to each part of the tutorial.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-005-tut01/&#34;&gt;&lt;img src=&#34;vortexvfx01.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 05 - Vortex VFX Tutorial - Part One&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;&gt;&lt;img src=&#34;vortexvfx02.png&#34; alt=&#34;Another Link card image. This one reads - The Amarantos Ritual - 06 - Vortex VFX Tutorial - Part Two&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;&gt;&lt;img src=&#34;vortexvfx03.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 07 - Vortex VFX Tutorial - Part Three&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-008-tut04/&#34;&gt;&lt;img src=&#34;vortexvfx04.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 08 - Vortex VFX Tutorial - Part Four&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/&#34;&gt;&lt;img src=&#34;vortexvfx05.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 09 - Vortex VFX Tutorial - Part Five&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;buy-the-asset&#34;&gt;Buy the Asset&lt;/h2&gt;
&lt;p&gt;If you like the vortex VFX asset, you could purchase the game assets here. It includes the geometry, the textures and shaders of it. I have also spread all of it in an example Unreal 5 level where the basin can be seen in use and colored in different hues.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/s/1e9696c777&#34;&gt;&lt;img src=&#34;https://petedimitrovart.com/vfxvortexkofi2.jpg&#34; alt=&#34;Image link button showing 3 vfx vortex basins. Blue, purple and green one. Text on top reads Click here to buy the UE5 assets for this VFX over at Ko-fi.&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;p&gt;Pete.&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        <item>
        <title>The Amarantos Ritual - 09 - Vortex VFX Tutorial - Part Five (Optional)</title>
        <link>https://petedimitrovart.com/p/amarantos-009-tut05/</link>
        <pubDate>Wed, 20 Sep 2023 19:28:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/amarantos-009-tut05/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/amarantos-009-tut05/amarantos182-c.jpg" alt="Featured image of post The Amarantos Ritual - 09 - Vortex VFX Tutorial - Part Five (Optional)" /&gt;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Lets use a Blueprint Actor with extended Construction Script logic in order to improve our work practices.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We have went through all four previous entries of this tutorial series. We have created the geometry, textures and then shaders necessary for getting the nice visual end result. We could leave it there. The VFX vision is accomplished.&lt;/p&gt;
&lt;p&gt;However, there is one final, optional step I wanted to run you through. It&amp;rsquo;s the set up of a custom Blueprint Actor and a few lines of Construction Script node logic.&lt;/p&gt;
&lt;p&gt;If you would like to remind yourself of the previous tutorial steps, you can do so over here:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-005-tut01/&#34;  title=&#34;index.md&#34;
    &gt;Part One - Creating Static Geometry&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;  title=&#34;index.md&#34;
    &gt;Part Two - Creating Textures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;  title=&#34;index.md&#34;
    &gt;Part Three - Making Polar Coordinates Shader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;  title=&#34;index.md&#34;
    &gt;Part Four - Adding Refraction Shader and Assembling The Final VFX&lt;/a&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Tip:&lt;/p&gt;
    &lt;p&gt;As in all parts of this tutorial series, I am working in UE5.3. If you are inside UE4, you can still follow along and should not have any issues replicating any part.&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;If you are happy with what you have, you can skip this final part. If you want to learn more about Blueprints and Unreal, stick around.&lt;/p&gt;
&lt;p&gt;Here is a reminded of what we have accomplished so far:&lt;/p&gt;
&lt;h2 id=&#34;videos-preview&#34;&gt;Videos Preview&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/4y6RyrYRb0o&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above, showcasing the final vortex VFX we will be creating.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/mFvhWQ9ot0M&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above. Shows the VFX basin duplicated three times. One is blue, the other is purple, the last one is green.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I like the visual result and the set up of our work so far. The VFX vortex basin looks cool. It looks how we wanted it. I have a &amp;ldquo;problem&amp;rdquo; with a part of its set up that has nothing to do with the visuals though. I say &amp;ldquo;problem&amp;rdquo; because its not a large issue per se.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s more about efficiency than about any &lt;em&gt;&amp;ldquo;problem&amp;rdquo;&lt;/em&gt;. There is an overall lack of efficiency that shows up in a few ways. Lets look over it.&lt;/p&gt;
&lt;h3 id=&#34;not-bundled&#34;&gt;Not Bundled&lt;/h3&gt;
&lt;p&gt;For a started, our VFX basin is composed of four pieces:&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
  &lt;li&gt;Static vortex mesh with base color.&lt;/li&gt;
  &lt;li&gt;Static vortex mesh copy with refraction.&lt;/li&gt;
  &lt;li&gt;Middle small static mesh plane to fix imperfection.&lt;/li&gt;
  &lt;li&gt;Cylinder static mesh frame.&lt;/li&gt;
&lt;/ol&gt; 
&lt;p&gt;As such whenever I want to copy my visual into a new level, or make a duplicate in the existing level, I have to select all one by one, as seen in the image below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos149.jpg&#34;
	width=&#34;1716&#34;
	height=&#34;982&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 5 screenshot of a scene. Four static meshes - plane, two vfx vortex basins and a cylinder are selected. That can be seen in the Hierarchy view on the right of the screen, where the pieces are selected in blue highlighter.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;174&#34;
		data-flex-basis=&#34;419px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Lets imagine a hypothetical situation where this asset is used in a full production game, where lots of artist work on the game. First, selecting one by one four assets, whenever you want to move things around is inefficient. Second, having to &amp;ldquo;instruct&amp;rdquo; and have other artists remember about your edge case VFX where its split into four pieces is also quite inefficient.&lt;/p&gt;
&lt;p&gt;There is a solution to that. It is to turn the four pieces into a bundle. Into a Blueprint Actor. We will do that and cover the necessary steps. Any artist, designer or a programmer that later on has to work with this VFX basin, add functionality or do tweaks, will be thankful to us for bundling it properly into an actor.&lt;/p&gt;
&lt;h3 id=&#34;hard-to-change-color&#34;&gt;Hard to Change Color&lt;/h3&gt;
&lt;p&gt;If you remember from the previous steps, we made our main material shader so we can tint the VFX into any color we like. That is the reason why in &lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;  title=&#34;index.md&#34;
    &gt;part two&lt;/a&gt; of the tutorial series we left the &amp;ldquo;albedo&amp;rdquo; liquid-spill texture black and white - so we could tint it in engine.&lt;/p&gt;
&lt;p&gt;As such, lets imagine another hypothetical situation with a game in full production. Let us say that this VFX basin is used as a portal or as some fundamental for gameplay function. As such it will exist everywhere. Lots of copies in each world. Also lets say that for visual variety, or even better, for design functionality, we have created a big array of lots of colored versions of this VFX basin. Its not going to be just blue, purple and green like the previews above.&lt;/p&gt;
&lt;p&gt;Instead its going to be blue, purple, green, violet, pink, red, yellow, cyan, a shade of black, a shade of white, and more. Also lets imagine that new artists or designers joining might want newer shades of colors, so they suddenly create even more. Our Content Browser ends up like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos150.jpg&#34;
	width=&#34;1603&#34;
	height=&#34;412&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from the Content Drawer (project directory) of UE5. 9 files are visible which have similar icons but are all different colors. Those are 9 copies of the same material instance - the polar coordinates from the previous blog parts - tinted in all kinds of hues.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;389&#34;
		data-flex-basis=&#34;933px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I had the patience to make only 9 material instances to illustrate this point. But imagine there being 18, or 25 or even 30 material instances. Believe me, I&amp;rsquo;ve seen productions at previous game dev jobs I&amp;rsquo;ve had where this thing happens. I didn&amp;rsquo;t name the instances properly either - instead of having a color in the name, they just go _Inst1&amp;hellip;Inst2&amp;hellip;InstN. and I&amp;rsquo;ve seen that in studios out there too &lt;em&gt;(make sure to always name things properly)&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;In order to make something more efficient and eliminate the two issues above, we can create a Blueprint Actor. In it, all static meshes will be into a collection, which fixes problem one. Then in the Construction Script of the blueprint, we can use few nodes of logic in order to make it so we have exposed and customizable color per blueprint actor instance once placed in the world.&lt;/p&gt;
&lt;p&gt;We will end up with this.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos151.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 5 blueprint actor inspection screen image. In the middle, in the 3D viewport, we can see the VFX basin meshes. If we look at the left side of the screen, we can see all 4 static meshes are listed. If we look at the right side, we will see a &amp;ldquo;Base Color&amp;rdquo; tinted in blue. That controls the color per actor instance basis, dynamically.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;blueprint-actor&#34;&gt;Blueprint Actor&lt;/h2&gt;
&lt;p&gt;In your project directory, make a folder called &amp;ldquo;Blueprints&amp;rdquo;. Inside of it, right click to create a new asset. Under &amp;ldquo;Create Basic Asset&amp;rdquo;, select &amp;ldquo;Blueprint Class&amp;rdquo;. In the window that pops up, select the top option button, called &amp;ldquo;Actor&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos152.jpg&#34;
	width=&#34;984&#34;
	height=&#34;869&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Two UE5 screenshots put next to one another. First one is context menu for creating new asset, with the &amp;ldquo;Blueprint Class&amp;rdquo; blue icon circled. Second is the window that pops up on the screen after clicking on the context menu. Its a list with common type of blueprint classes. The top one, &amp;ldquo;Actor&amp;rdquo; is circle, thats the one we want to create.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;271px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;For a name of your Blueprint go for something easy to understand and follow like &lt;em&gt;&amp;ldquo;BP_vortex_basin&amp;rdquo;&lt;/em&gt;. Open the newly created blueprint.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos153.jpg&#34;
	width=&#34;1916&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot showing the newly created blueprint open. It sits empty and most of the menus have nothing in them. There is a blueprint billboard in the middle.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;adding-components&#34;&gt;Adding Components&lt;/h3&gt;
&lt;p&gt;Find the static mesh you created in the first part of this tutorial series. From the &amp;ldquo;Content Drawer&amp;rdquo; drag it into the Blueprint.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos154.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1152&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE5 blueprint screenshot. Yellow arrow points where to drag the static mesh from the project into the blueprint.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select the newly added mesh. On the right hand side panel, first change the &amp;ldquo;Mobility&amp;rdquo; from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo;. Then click on the Material and find your vortex material instance, the one that has default white color tint on it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos155.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another UE5 screenshot. This one shows changing the mobility of the asset and changing the material from the gray one to a black and white polar coordinates one.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;With mobility set to static from the previous step, we can now click and hold the mesh on the left hand side of the screen and then drag it on top of &amp;ldquo;DefaultSceneRoot&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos156.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1148&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot showing selecting and dragging the static mesh of the vortex, in the hierarchy list of the blueprint on the left. The mesh is dragged on top of its parent that goes by the name &amp;ldquo;DefaultSceneRoot&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The end result is this where we have no &amp;ldquo;DefaultSceneRoot&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos157.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Imagine pointing at the left side hierarchy list of the blueprint. There is now no &amp;ldquo;DefaultSceneRoot&amp;rdquo;. Instead the mesh replaced it.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select &amp;ldquo;SM_Basin_Tutorial1&amp;rdquo; (your top asset in the hierarchy to the left, the name might be different for you). Copy and paste it (do so by pressing CTRL + C and then CTRL + V immediately, while hovering the mouse over the hierarchy window oon the left). Select the second, new copy, in the hierarchy. Change its Z position to 4 by using the Details panel to the right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos158.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot looking at the hierarchy (Components) window to the left. It shows copying the basin static mesh to get a secondary copy. After selecting it, an arrow points on the right Details panel where we change the Z (blue axis) position value from 0 to 4.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;rename&#34;&gt;Rename&lt;/h3&gt;
&lt;p&gt;Rename your top asset to &amp;ldquo;SM_polar_vortex&amp;rdquo;. The child component (asset) under, rename to &amp;ldquo;SM_refraction_basin&amp;rdquo;. Select the refraction mesh and change its material to your transparent, refraction one from the previous part in this tutorial series.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos159.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1147&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another UE5 screenshot that shows us selecting the top asset on the left window and renaming it. Then selecting the child under it and renaming that too. From the right side panel, we change the Material of the child actor to a refraction material. Yellow text and the renames are transcribed in the paragraph above.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Click the &amp;ldquo;Add&amp;rdquo; button below the &amp;ldquo;Components&amp;rdquo; in the top left corner. Select &amp;ldquo;Plane&amp;rdquo; from the &amp;ldquo;Add&amp;rdquo; subcontext menu. Drag the plane to be under &amp;ldquo;SM_polar_vortex&amp;rdquo;. Change its Z location setting to &amp;ldquo;5&amp;rdquo;. For its &amp;ldquo;Mobility&amp;rdquo; change from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo; as per usual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos160.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image showing zoomed in look at the vortex basin. There is a new plane added right in the middle, that has white placeholder material. Arrows run us through clicking on &amp;ldquo;Add&amp;rdquo; on left top corner. Then dragging the newly added plane to the correct place and finally changing its settings.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Rename your &amp;ldquo;Plane&amp;rdquo; to &amp;ldquo;SM_plane_polar&amp;rdquo;. Set its material to be the black and white polar one (identical to our SM_polar_vortex).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos161.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Same zoomed image as before but now the white plane in the middle has the same polar coordinates gray material as the mesh around it. Arrows point to changing the name of the plane and then to changing its material on the right side of the UI.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Drag in your cylinder frame mesh &lt;em&gt;(I do this by dragging the file from the project Content Drawer and onto the BP here)&lt;/em&gt;. Position it so it fits well. Set it to &amp;ldquo;Static&amp;rdquo; as usual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos162.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Shot looking at the blueprints component a bit from a far. Now there is a cylinder frame encompassing the polar vortex. Arrow on the left shows where we place this new component. Arrow on the right shows where to change from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo; mobility setting.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;construction-script&#34;&gt;Construction Script&lt;/h2&gt;
&lt;p&gt;Double click on the &amp;ldquo;ConstructionScript&amp;rdquo; function that is listed in the image seen below &lt;em&gt;(yellow arrow points at it)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos163.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1149&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another image looking at the blueprint viewport. Arrow points to a &amp;ldquo;FUNCTIONS&amp;rdquo; tab that is expanded. In it there is &amp;ldquo;ConstructionScript&amp;rdquo; that is double clicked.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After double clicking on the &amp;ldquo;ConstructionScript&amp;rdquo; seen in the previous image, a new tab opens. If we want to go back on the top part of the screen, there is a tab called &amp;ldquo;Viewport&amp;rdquo; &lt;em&gt;(we are not going back now, just saying)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos164.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Newly opened construction scrip tab inside the blueprint. Shows a mostly empty nodes board on which there is only a purple construction script node. Arrows point at the UI elements for changing between the different blueprint tabs.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;On the left side, there is a category called &amp;ldquo;Components&amp;rdquo;. Expand it. Inside you will see the collection of &amp;ldquo;SM_&amp;rdquo; pieces you have in the blueprint.&lt;/p&gt;
&lt;p&gt;Start by dragging &amp;ldquo;SM_plane_polar&amp;rdquo; onto the board. Context menu with &amp;ldquo;Get&amp;rdquo; and &amp;ldquo;Set&amp;rdquo; shows up after you drag. Select &amp;ldquo;Get&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos165.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image pointing at where to look for the &amp;ldquo;SM_plane_polar&amp;rdquo; component and how to drag it, then opening a new little sub context menu with &amp;ldquo;Get&amp;rdquo; and &amp;ldquo;Set&amp;rdquo;. &amp;ldquo;Get SM_plane_polar&amp;rdquo; is selected (colored in blue).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The previous step adds this node on the board, seen below - blue tinted &amp;ldquo;SM Plane Polar&amp;rdquo; named on. Repeat the same step but now drag &amp;ldquo;SM_Polar_Vortex&amp;rdquo; component from the left menu. Add it to the board.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos166.jpg&#34;
	width=&#34;1919&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot showing what we added from the last step - a blue node. Then an arrow points to the left hand side where we drag another component onto the board and we get a second blue node, below the previous one. This second one is called &amp;ldquo;SM Polar Vortex&amp;rdquo;. &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;set-vector-parameter&#34;&gt;Set Vector Parameter&lt;/h3&gt;
&lt;p&gt;Start dragging the pin out of &amp;ldquo;SM Plane Polar&amp;rdquo; blue node. Let go and this search seen below will appear. Type in &amp;ldquo;set vector parameter&amp;rdquo; and select &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo; that will appear in the list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos167.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Imagine showcasing dragging out of the blue top pin. A long list opens with a search on the top. In that search we&amp;rsquo;ve typed &amp;ldquo;set vector parameter&amp;rdquo; and right by the end of the list, partially in green highlighter color, &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo; shows up. Image shows us clicking on it to add it.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This large node shows up &lt;em&gt;(seen below)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos168.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot showing the purple construction script node. On its right there is now a new, large node, added from last step. That node reads &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo; and has a &amp;ldquo;Target&amp;rdquo; connected to one of our blue pins.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Connect the purple node to the &amp;ldquo;Set Vector&amp;rdquo; blue one &lt;em&gt;(I&amp;rsquo;ve highlighted it in yellow, broken line below)&lt;/em&gt;. Connect &amp;ldquo;SM Polar Vortex&amp;rdquo; into &amp;ldquo;Target&amp;rdquo; of &amp;ldquo;Sec Vector&amp;rdquo; node. Change &amp;ldquo;Parameter Name&amp;rdquo; on the &amp;ldquo;Set Vector&amp;rdquo; large node from &amp;ldquo;None&amp;rdquo; to &amp;ldquo;Base Tint&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;We didn&amp;rsquo;t make up this name. Instead we took it from our parent material.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos169.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image showing us connecting the left side, purple, construction script node into the large, &amp;ldquo;Set Vector&amp;rdquo; node. Then an arrows points on connecting the node called &amp;ldquo;SM Polar Vortex&amp;rdquo; into &amp;ldquo;Target&amp;rdquo; input of &amp;ldquo;Set Vector&amp;rdquo; large node. An arrow next to a warning sign then shows to change &amp;ldquo;Parameter Name&amp;rdquo; to &amp;ldquo;Base Tint&amp;rdquo;. The warning is transcribed in the sentences above this image.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This image below is a reminder that if we go back to our parent material, inside of it we have a &amp;ldquo;Vector 4&amp;rdquo; parameter called &amp;ldquo;Base Tint&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos170.jpg&#34;
	width=&#34;1886&#34;
	height=&#34;1025&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot back from a Material Editor Graph of a parent material. In the middle we can see a color node &amp;ldquo;vector 4&amp;rdquo;. The name on it is &amp;ldquo;Base Tint&amp;rdquo;. This image is taken from the tutorial part that covered making the polar coordinates parent material.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;441px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In our material instance that we edit through the construction script, we can also see our &amp;ldquo;Base Tint&amp;rdquo; parameter. In fact any of the &amp;ldquo;Scalar Parameters&amp;rdquo; or the &amp;ldquo;Vector Parameters&amp;rdquo; seen in here, we could edit, if we wanted to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos171.jpg&#34;
	width=&#34;1915&#34;
	height=&#34;1115&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot, this time with a &amp;ldquo;Material Instance&amp;rdquo; asset open. On the left we see a ball shader preview. On the right we see a list of parameters. Text is transcribed above.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;We do that by using these two nodes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos172.jpg&#34;
	width=&#34;1134&#34;
	height=&#34;771&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Blueprints screenshot that showcases the two mostly common used nodes for dynamically editing parameters of materials. Top one is called &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo;. Bottom one is called &amp;ldquo;Set Scalar Parameter Value on Materials&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;352px&#34;
	
&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock error&#34;&gt;
    &lt;p&gt;Note:&lt;/p&gt;
    &lt;p&gt;From all of the descriptions and material vs construction script images you see above, you hopefully learned that we need to be careful and track exactly how we name our parameters inside of the material graph. We then use the names inside of our new blueprints, as exactly seen over in the material. If in your material you named your Base Tint to something different, then don&amp;#39;t copy that name from me, instead use the name you came up with back when you were making your material shader.&lt;/p&gt;
    &lt;/div&gt;
&lt;h3 id=&#34;new-variable&#34;&gt;New Variable&lt;/h3&gt;
&lt;p&gt;With all pins connected and with the &amp;ldquo;Parameter Name&amp;rdquo; of the &amp;ldquo;Set Vector&amp;rdquo; node put correctly, now lets create a new Blueprint Variable.&lt;/p&gt;
&lt;p&gt;Click on the (+) sign seen below to add a new variable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos173.jpg&#34;
	width=&#34;1919&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;We are back to the blueprint construction scrip board and this image showcases it. An arrow to the left points at a plus sign next to &amp;ldquo;VARIABLES&amp;rdquo;. Clicking it starts making a new variable that by default has red color that indicates a Boolean type.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The newly created variable, name &amp;ldquo;BaseColor&amp;rdquo;. You can do so by selecting the &amp;ldquo;NewVar&amp;rdquo; red boolean and then changing its name on the panel in the right hand side. From &amp;ldquo;Variable Type&amp;rdquo; over in that corner, search for &amp;ldquo;Linear Color&amp;rdquo; and set it to that. The red boolean indicator will turn into a dark blue Linear Color indicator. From the settings over there also turn on &amp;ldquo;Instance Editable&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Instance Editable turned on, in the settings there, is very important as that is what will let us change the color when we drag a blueprint instance in the open world.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos174.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1152&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE5 screenshot that has an arrow pointing to the right hand panel. In that side are lots of settings like variable name, variable type, and others. We tweak those as described above.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Drag &amp;ldquo;BaseColor&amp;rdquo; from the left side onto the board. From the context menu that shows and asks if you want to &amp;ldquo;Get&amp;rdquo; or &amp;ldquo;Set&amp;rdquo; the Base Color, pick &amp;ldquo;Get. The node seen below will show up. Connect Base Color node pin into &amp;ldquo;Parameter Value&amp;rdquo; of &amp;ldquo;Set Vector Parameter Value on Material&amp;rdquo; node seen below. It will do a conversion for us &lt;em&gt;(seen in the picture after the next one)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos175.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1152&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot that shows the result of Base Color dragged onto the board - a dark blue Base Color pin shows up. The image then shows us dragging its pin out and connecting it into the &amp;ldquo;Parameter Value&amp;rdquo; of &amp;ldquo;Set Vector&amp;rdquo; large node. With that a little text appears, with a red and blue icon, that says &amp;ldquo;Convert Linear Color Structure to Vector&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Everything should look like above after the new conversion pin &lt;em&gt;(the one going from dark blue to dark orange and then connecting into &amp;ldquo;Parameter Value&amp;rdquo;)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos176.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Blueprint board screenshot that shows our nodes work so far. Our dark blue node called Base Color connects into a dark orange conversion node that has no name visually. That then connects into Parameter Value of the large node &amp;ldquo;Set Vector Parameter&amp;hellip;&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Tip:&lt;/p&gt;
    &lt;p&gt;When we made our variable, instead of going for Linear Color we could have gone for Vector 3. That Vector 3 would have technically been a color - one with no alpha of course - that then directly connects above without needing a conversion node. When exposed, the Vector 3 would have X, Y and Z value and would not give us interface with a color picker, which is not ideal. Us using a Linear Color structure instead and then converting it to Vector 3 allows us to have a nice color picker which makes it more artist / user friendly. We will see that picker in action in a few pictures down this blog post.&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;Select the &amp;ldquo;BaseColor&amp;rdquo; from here (&lt;em&gt;the left side panel)&lt;/em&gt; again. Click on the black box on the right side panel to change the default color. I put mine to blue. That color picked seen here would not have worked had we not done it the way the green &amp;ldquo;Tip&amp;rdquo; box above describes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos177.jpg&#34;
	width=&#34;1917&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot that now shows the Base Color selected and its right hand side settings change. The black box there is clicked and then change to a bright blue color, using a color picker seen in the image.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;We are done with the Blueprint set up!&lt;/p&gt;
&lt;h2 id=&#34;in-a-level&#34;&gt;In A Level&lt;/h2&gt;
&lt;p&gt;Drag our newly finished blueprint into the scene. It looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos178.jpg&#34;
	width=&#34;1908&#34;
	height=&#34;1014&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot that shows a viewport looking at a blank UE5 level that comes with the default skybox, volumetric clouds and a plane with checkerboard material. In one corner, closest to the camera we have dragged in our newly created blueprint. It looks like a blue vortex.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;451px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Now duplicate the newly placed blue vortex blueprint. Move it to the side. From the right &amp;ldquo;Details&amp;rdquo; menu of UE5 change the color &lt;em&gt;(this is the Base Color variable that we implemented)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos179.jpg&#34;
	width=&#34;1913&#34;
	height=&#34;1043&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image that has identical to before subject and angle. Now next to the blue vortex blueprint that is out in the world, there is a secondary one. This secondary one has its Base Color blueprint variable changed to a pink, red color. That is reflected in the world too, where the material instance used on that dynamically has changed to the same shade of red.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;440px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Duplicate your blueprint as many times. Set as many different colors you want. All of the materials are dynamic and are saved inside the level itself. As such our Project Directory is tidy and not overflowed with lots of material instances.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos180.jpg&#34;
	width=&#34;1209&#34;
	height=&#34;904&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another UE5 blank level screenshot. Angle is same as before but now most of the before empty space is occupied by many vortex basins. There are blue, red, purple, green, yellow, white, teal and many more colors.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;color-previews&#34;&gt;Color Previews&lt;/h2&gt;
&lt;p&gt;Here is one final view of our work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos181.jpg&#34;
	width=&#34;2000&#34;
	height=&#34;1125&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot similar to the previous one but now the camera is slightly from afar and orthographic looking. A line of six colored vortex, all different is put out. On a second line below, five more sit.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this optional part of the VFX tutorial for creating a vortex basin, we looked at Blueprint set ups. We learned how to bundle our few different static meshes so they are more artist friendly and efficient to use. We then looked into using construction script in order to connect a linear color blueprint parameter into the material used on the vortex. That allowed us to efficiently change the color of each unique vortex blueprint instance, once put in the world, without having to make unique material instances in our project directory.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I hope you enjoyed reading and going through this tutorial series. I had a lot of fun putting it together and I sincerely hope it comes to be useful and educational for anyone reading it out there.&lt;/p&gt;
&lt;p&gt;It took me around a month and lots of hours after work to write this all up. It was a lot of effort to create all of the images, annotate them on top step by step, and give them alt text. I think we totalled to around 180 images. As such if you would like to drop a tip over at my Ko-fi page, I would be very grateful. You can find it in the blue badge link below. Alternatively you could purchase the asset itself from my shop.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/s/1e9696c777&#34;&gt;&lt;img src=&#34;https://petedimitrovart.com/vfxvortexkofi2.jpg&#34; alt=&#34;Image link button showing 3 vfx vortex basins. Blue, purple and green one. Text on top reads Click here to buy the UE5 assets for this VFX over at Ko-fi.&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;p&gt;Pete.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-010/&#34;  title=&#34;index.md&#34;
    &gt;Go to next blog entry.&lt;/a&gt;&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you enjoyed this blog post, consider subscribing in the form below. That way you will get a notification the next time I publish a new blog.&lt;/em&gt;&lt;/p&gt;
&lt;style type=&#34;text/css&#34;&gt;@import url(&#34;https://assets.mlcdn.com/fonts.css?version=1711021&#34;);&lt;/style&gt;
    &lt;style type=&#34;text/css&#34;&gt;
     
    .ml-form-embedSubmitLoad {
      display: inline-block;
      width: 20px;
      height: 20px;
    }

    .g-recaptcha {
    transform: scale(1);
    -webkit-transform: scale(1);
    transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    height: ;
    }

    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0,0,0,0);
      border: 0;
    }

    .ml-form-embedSubmitLoad:after {
      content: &#34; &#34;;
      display: block;
      width: 11px;
      height: 11px;
      margin: 1px;
      border-radius: 50%;
      border: 4px solid #fff;
    border-color: #ffffff #ffffff #ffffff transparent;
    animation: ml-form-embedSubmitLoad 1.2s linear infinite;
    }
    @keyframes ml-form-embedSubmitLoad {
      0% {
      transform: rotate(0deg);
      }
      100% {
      transform: rotate(360deg);
      }
    }
      #mlb2-13430639.ml-form-embedContainer {
        box-sizing: border-box;
        display: table;
        margin: 0 auto;
        position: static;
        width: 100% !important;
      }
      #mlb2-13430639.ml-form-embedContainer h4,
      #mlb2-13430639.ml-form-embedContainer p,
      #mlb2-13430639.ml-form-embedContainer span,
      #mlb2-13430639.ml-form-embedContainer button {
        text-transform: none !important;
        letter-spacing: normal !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper {
        background-color: #101014;
        
        border-width: 0px;
        border-color: transparent;
        border-radius: 4px;
        border-style: solid;
        box-sizing: border-box;
        display: inline-block !important;
        margin: 0;
        padding: 0;
        position: relative;
              }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper.embedPopup,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper.embedDefault { width: 610px; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper.embedForm { max-width: 610px; width: 100%; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-left { text-align: left; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-center { text-align: center; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-default { display: table-cell !important; vertical-align: middle !important; text-align: center !important; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-align-right { text-align: right; }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedHeader img {
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        height: auto;
        margin: 0 auto !important;
        max-width: 100%;
        width: 1024px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody {
        padding: 20px 20px 0 20px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody.ml-form-embedBodyHorizontal {
        padding-bottom: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent {
        text-align: left;
        margin: 0 0 20px 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent h4,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent h4 {
        color: #ffffff;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 30px;
        font-weight: 400;
        margin: 0 0 10px 0;
        text-align: left;
        word-break: break-word;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent p,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent p {
        color: #ffffff;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px;
        font-weight: 400;
        line-height: 20px;
        margin: 0 0 10px 0;
        text-align: left;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ul,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ol,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ul,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ol {
        color: #ffffff;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ol ol,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ol ol {
        list-style-type: lower-alpha;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent ol ol ol,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent ol ol ol {
        list-style-type: lower-roman;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent p a,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent p a {
        color: #000000;
        text-decoration: underline;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-block-form .ml-field-group {
        text-align: left!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-block-form .ml-field-group label {
        margin-bottom: 5px;
        color: #ffffff;
        font-size: 14px;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-weight: bold; font-style: normal; text-decoration: none;;
        display: inline-block;
        line-height: 20px;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedContent p:last-child,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-successBody .ml-form-successContent p:last-child {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody form {
        margin: 0;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-formContent,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow {
        margin: 0 0 20px 0;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow {
        float: left;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-formContent.horozintalForm {
        margin: 0;
        padding: 0 0 20px 0;
        width: 100%;
        height: auto;
        float: left;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow {
        margin: 0 0 10px 0;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow.ml-last-item {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow.ml-formfieldHorizintal {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input {
        background-color: #ffffff !important;
        color: #333333 !important;
        border-color: #428beb;
        border-radius: 4px !important;
        border-style: solid !important;
        border-width: 0px !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px !important;
        height: auto;
        line-height: 21px !important;
        margin-bottom: 0;
        margin-top: 0;
        margin-left: 0;
        margin-right: 0;
        padding: 10px 10px !important;
        width: 100% !important;
        box-sizing: border-box !important;
        max-width: 100% !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input::-webkit-input-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input::-webkit-input-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input::-moz-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input::-moz-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input:-ms-input-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input:-ms-input-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input:-moz-placeholder,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input:-moz-placeholder { color: #333333; }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow textarea, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow textarea {
        background-color: #ffffff !important;
        color: #333333 !important;
        border-color: #428beb;
        border-radius: 4px !important;
        border-style: solid !important;
        border-width: 0px !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px !important;
        height: auto;
        line-height: 21px !important;
        margin-bottom: 0;
        margin-top: 0;
        padding: 10px 10px !important;
        width: 100% !important;
        box-sizing: border-box !important;
        max-width: 100% !important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before {
          border-color: #428beb!important;
          background-color: #ffffff!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow input.custom-control-input[type=&#34;checkbox&#34;]{
        box-sizing: border-box;
        padding: 0;
        position: absolute;
        z-index: -1;
        opacity: 0;
        margin-top: 5px;
        margin-left: -1.5rem;
        overflow: visible;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before {
        border-radius: 4px!important;
      }


      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow input[type=checkbox]:checked~.label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox input[type=checkbox]:checked~.label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-input:checked~.custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-input:checked~.custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox input[type=checkbox]:checked~.label-description::after {
        background-image: url(&#34;data:image/svg+xml,%3csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;0 0 8 8&#39;%3e%3cpath fill=&#39;%23fff&#39; d=&#39;M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z&#39;/%3e%3c/svg%3e&#34;);
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input:checked~.custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input:checked~.custom-control-label::after {
        background-image: url(&#34;data:image/svg+xml,%3csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#39;-4 -4 8 8&#39;%3e%3ccircle r=&#39;3&#39; fill=&#39;%23fff&#39;/%3e%3c/svg%3e&#34;);
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-input:checked~.custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox input[type=checkbox]:checked~.label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox input[type=checkbox]:checked~.label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow input[type=checkbox]:checked~.label-description::before  {
          border-color: #000000!important;
          background-color: #000000!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label::after {
           top: 2px;
           box-sizing: border-box;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
           top: 0px!important;
           box-sizing: border-box!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
        top: 0px!important;
           box-sizing: border-box!important;
      }

       #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::after {
            top: 0px!important;
            box-sizing: border-box!important;
            position: absolute;
            left: -1.5rem;
            display: block;
            width: 1rem;
            height: 1rem;
            content: &#34;&#34;;
       }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before {
        top: 0px!important;
        box-sizing: border-box!important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-control-label::before {
          position: absolute;
          top: 4px;
          left: -1.5rem;
          display: block;
          width: 16px;
          height: 16px;
          pointer-events: none;
          content: &#34;&#34;;
          background-color: #ffffff;
          border: #adb5bd solid 1px;
          border-radius: 50%;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-control-label::after {
          position: absolute;
          top: 2px!important;
          left: -1.5rem;
          display: block;
          width: 1rem;
          height: 1rem;
          content: &#34;&#34;;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::before, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::before {
          position: absolute;
          top: 4px;
          left: -1.5rem;
          display: block;
          width: 16px;
          height: 16px;
          pointer-events: none;
          content: &#34;&#34;;
          background-color: #ffffff;
          border: #adb5bd solid 1px;
          border-radius: 50%;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::after {
          position: absolute;
          top: 0px!important;
          left: -1.5rem;
          display: block;
          width: 1rem;
          height: 1rem;
          content: &#34;&#34;;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
          position: absolute;
          top: 0px!important;
          left: -1.5rem;
          display: block;
          width: 1rem;
          height: 1rem;
          content: &#34;&#34;;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-radio .custom-control-label::after {
          background: no-repeat 50%/50% 50%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .custom-checkbox .custom-control-label::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedPermissions .ml-form-embedPermissionsOptionsCheckbox .label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-interestGroupsRow .ml-form-interestGroupsRowCheckbox .label-description::after, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description::after {
          background: no-repeat 50%/50% 50%;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-control, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-control {
        position: relative;
        display: block;
        min-height: 1.5rem;
        padding-left: 1.5rem;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-input, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-input, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-input, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-input {
          position: absolute;
          z-index: -1;
          opacity: 0;
          box-sizing: border-box;
          padding: 0;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-radio .custom-control-label, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-radio .custom-control-label, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-checkbox .custom-control-label, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-checkbox .custom-control-label {
          color: #ffffff;
          font-size: 12px!important;
          font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
          line-height: 22px;
          margin-bottom: 0;
          position: relative;
          vertical-align: top;
          font-style: normal;
          font-weight: 700;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-fieldRow .custom-select, #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow .custom-select {
        background-color: #ffffff !important;
        color: #333333 !important;
        border-color: #428beb;
        border-radius: 4px !important;
        border-style: solid !important;
        border-width: 0px !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px !important;
        line-height: 20px !important;
        margin-bottom: 0;
        margin-top: 0;
        padding: 10px 28px 10px 12px !important;
        width: 100% !important;
        box-sizing: border-box !important;
        max-width: 100% !important;
        height: auto;
        display: inline-block;
        vertical-align: middle;
        background: url(&#39;https://assets.mlcdn.com/ml/images/default/dropdown.svg&#39;) no-repeat right .75rem center/8px 10px;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
      }


      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow {
        height: auto;
        width: 100%;
        float: left;
      }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-input-horizontal { width: 70%; float: left; }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-button-horizontal { width: 30%; float: left; }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-button-horizontal.labelsOn { padding-top: 25px;  }
      .ml-form-formContent.horozintalForm .ml-form-horizontalRow .horizontal-fields { box-sizing: border-box; float: left; padding-right: 10px;  }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow input {
        background-color: #ffffff;
        color: #333333;
        border-color: #428beb;
        border-radius: 4px;
        border-style: solid;
        border-width: 0px;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 14px;
        line-height: 20px;
        margin-bottom: 0;
        margin-top: 0;
        padding: 10px 10px;
        width: 100%;
        box-sizing: border-box;
        overflow-y: initial;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow button {
        background-color: #428beb !important;
        border-color: #428beb;
        border-style: solid;
        border-width: 0px;
        border-radius: 4px;
        box-shadow: none;
        color: #ffffff !important;
        cursor: pointer;
        font-family: Arial, Helvetica, sans-serif;
        font-size: 18px !important;
        font-weight: 400;
        line-height: 20px;
        margin: 0 !important;
        padding: 10px !important;
        width: 100%;
        height: auto;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-horizontalRow button:hover {
        background-color: #9fc0ee !important;
        border-color: #9fc0ee !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow input[type=&#34;checkbox&#34;] {
        box-sizing: border-box;
        padding: 0;
        position: absolute;
        z-index: -1;
        opacity: 0;
        margin-top: 5px;
        margin-left: -1.5rem;
        overflow: visible;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow .label-description {
        color: #000000;
        display: block;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif;
        font-size: 12px;
        text-align: left;
        margin-bottom: 0;
        position: relative;
        vertical-align: top;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label {
        font-weight: normal;
        margin: 0;
        padding: 0;
        position: relative;
        display: block;
        min-height: 24px;
        padding-left: 24px;

      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label a {
        color: #000000;
        text-decoration: underline;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label p {
        color: #000000 !important;
        font-family: &#39;Open Sans&#39;, Arial, Helvetica, sans-serif !important;
        font-size: 12px !important;
        font-weight: normal !important;
        line-height: 18px !important;
        padding: 0 !important;
        margin: 0 5px 0 0 !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow label p:last-child {
        margin: 0;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit {
        margin: 0 0 20px 0;
        float: left;
        width: 100%;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit button {
        background-color: #428beb !important;
        border: none !important;
        border-radius: 4px !important;
        box-shadow: none !important;
        color: #ffffff !important;
        cursor: pointer;
        font-family: Arial, Helvetica, sans-serif !important;
        font-size: 18px !important;
        font-weight: 400 !important;
        line-height: 21px !important;
        height: auto;
        padding: 10px !important;
        width: 100% !important;
        box-sizing: border-box !important;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit button.loading {
        display: none;
      }
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-embedSubmit button:hover {
        background-color: #9fc0ee !important;
      }
      .ml-subscribe-close {
        width: 30px;
        height: 30px;
        background: url(&#39;https://assets.mlcdn.com/ml/images/default/modal_close.png&#39;) no-repeat;
        background-size: 30px;
        cursor: pointer;
        margin-top: -10px;
        margin-right: -10px;
        position: absolute;
        top: 0;
        right: 0;
      }
      .ml-error input, .ml-error textarea, .ml-error select {
        border-color: red!important;
      }

      .ml-error .custom-checkbox-radio-list {
        border: 1px solid red !important;
        border-radius: 4px;
        padding: 10px;
      }

      .ml-error .label-description,
      .ml-error .label-description p,
      .ml-error .label-description p a,
      .ml-error label:first-child {
        color: #ff0000 !important;
      }

      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow.ml-error .label-description p,
      #mlb2-13430639.ml-form-embedContainer .ml-form-embedWrapper .ml-form-embedBody .ml-form-checkboxRow.ml-error .label-description p:first-letter {
        color: #ff0000 !important;
      }
            @media only screen and (max-width: 610px){

        .ml-form-embedWrapper.embedDefault, .ml-form-embedWrapper.embedPopup { width: 100%!important; }
        .ml-form-formContent.horozintalForm { float: left!important; }
        .ml-form-formContent.horozintalForm .ml-form-horizontalRow { height: auto!important; width: 100%!important; float: left!important; }
        .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-input-horizontal { width: 100%!important; }
        .ml-form-formContent.horozintalForm .ml-form-horizontalRow .ml-input-horizontal &gt; div { padding-right: 0px!important; padding-bottom: 10px; }
        .ml-form-formContent.horozintalForm .ml-button-horizontal { width: 100%!important; }
        .ml-form-formContent.horozintalForm .ml-button-horizontal.labelsOn { padding-top: 0px!important; }

      }
    &lt;/style&gt;

    
  
    
    

    
    

    
    

    

      
        
        
      

      
        
        
      

      

            
            
            
            
            
            
      

      

      
        
        
         
        
        
      

        
        
        
        
        
        
      

       

        
        
        
        
        
        
        
       


      
        
        
        
        
  



  
        
        
        
      


      
    
    
    
    
    
    
    
  

  
        
        
        
        
        
      

      
        
        
        
        
        
      

      
        
        
        
        
        
      

       

        
        
        
        
       

       
        
        
        
        
      

      
        
        
        
        
        
        
        
       

    

    


      


      

      
      

      

      





    

      
    &lt;div id=&#34;mlb2-13430639&#34; class=&#34;ml-form-embedContainer ml-subscribe-form ml-subscribe-form-13430639&#34;&gt;
      &lt;div class=&#34;ml-form-align-center &#34;&gt;
        &lt;div class=&#34;ml-form-embedWrapper embedForm&#34;&gt;

          
          

          &lt;div class=&#34;ml-form-embedBody ml-form-embedBodyDefault row-form&#34;&gt;

            &lt;div class=&#34;ml-form-embedContent&#34; style=&#34; &#34;&gt;
              
                &lt;h4&gt;Future blog posts...&lt;/h4&gt;
                &lt;p&gt;&lt;em&gt;Sign up for notifications of new blog posts!&lt;/em&gt;&lt;/p&gt;
              
            &lt;/div&gt;

            &lt;form class=&#34;ml-block-form&#34; action=&#34;https://assets.mailerlite.com/jsonp/881513/forms/116531059128009787/subscribe&#34; data-code=&#34;&#34; method=&#34;post&#34; target=&#34;_blank&#34;&gt;
              &lt;div class=&#34;ml-form-formContent&#34;&gt;
                

                  
                  &lt;div class=&#34;ml-form-fieldRow ml-last-item&#34;&gt;
                    &lt;div class=&#34;ml-field-group ml-field-email ml-validate-email ml-validate-required&#34;&gt;

                      


                      
                      &lt;input aria-label=&#34;email&#34; aria-required=&#34;true&#34; type=&#34;email&#34; class=&#34;form-control&#34; data-inputmask=&#34;&#34; name=&#34;fields[email]&#34; placeholder=&#34;enter your email&#34; autocomplete=&#34;email&#34;&gt;
                      

                      
                      
                      

                      
                      
                      

                      
            
            

                      
                      
                      

                      
                      
                      





                    &lt;/div&gt;
                  &lt;/div&gt;
                
              &lt;/div&gt;

              

              
              
              

              

              

              



&lt;div class=&#34;ml-form-recaptcha ml-validate-required&#34; style=&#34;float: left;&#34;&gt;
                &lt;style type=&#34;text/css&#34;&gt;
  .ml-form-recaptcha {
    margin-bottom: 20px;
  }

  .ml-form-recaptcha.ml-error iframe {
    border: solid 1px #ff0000;
  }

  @media screen and (max-width: 480px) {
    .ml-form-recaptcha {
      width: 220px!important
    }
    .g-recaptcha {
      transform: scale(0.78);
      -webkit-transform: scale(0.78);
      transform-origin: 0 0;
      -webkit-transform-origin: 0 0;
    }
  }
&lt;/style&gt;
  &lt;script src=&#34;https://www.google.com/recaptcha/api.js&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;g-recaptcha&#34; data-sitekey=&#34;6Lf1KHQUAAAAAFNKEX1hdSWCS3mRMv4FlFaNslaD&#34;&gt;&lt;/div&gt;
&lt;/div&gt;


              
              &lt;input type=&#34;hidden&#34; name=&#34;ml-submit&#34; value=&#34;1&#34;&gt;

              &lt;div class=&#34;ml-form-embedSubmit&#34;&gt;
                
                  &lt;button type=&#34;submit&#34; class=&#34;primary&#34;&gt;Subscribe&lt;/button&gt;
                
                &lt;button disabled=&#34;disabled&#34; style=&#34;display: none;&#34; type=&#34;button&#34; class=&#34;loading&#34;&gt;
                  &lt;div class=&#34;ml-form-embedSubmitLoad&#34;&gt;&lt;/div&gt;
                  &lt;span class=&#34;sr-only&#34;&gt;Loading...&lt;/span&gt;
                &lt;/button&gt;
              &lt;/div&gt;

              
              &lt;input type=&#34;hidden&#34; name=&#34;anticsrf&#34; value=&#34;true&#34;&gt;
            &lt;/form&gt;
          &lt;/div&gt;

          &lt;div class=&#34;ml-form-successBody row-success&#34; style=&#34;display: none&#34;&gt;

            &lt;div class=&#34;ml-form-successContent&#34;&gt;
              
                &lt;h4&gt;Thank you!&lt;/h4&gt;
                
                  &lt;p&gt;You have successfully joined our subscriber list.&lt;/p&gt;
                
              
            &lt;/div&gt;

          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

  

  
  
  &lt;script&gt;
    function ml_webform_success_13430639() {
      var $ = ml_jQuery || jQuery;
      $(&#39;.ml-subscribe-form-13430639 .row-success&#39;).show();
      $(&#39;.ml-subscribe-form-13430639 .row-form&#39;).hide();
    }
      &lt;/script&gt;
  
  
      &lt;script src=&#34;https://groot.mailerlite.com/js/w/webforms.min.js?v2d8fb22bb5b3677f161552cd9e774127&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;
        &lt;script&gt;
            fetch(&#34;https://assets.mailerlite.com/jsonp/881513/forms/116531059128009787/takel&#34;)
        &lt;/script&gt;
</description>
        </item>
        
    </channel>
</rss>
