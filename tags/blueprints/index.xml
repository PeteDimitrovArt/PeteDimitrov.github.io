<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Blueprints on Pete Dimitrov&#39;s Blog</title>
        <link>https://petedimitrovart.com/tags/blueprints/</link>
        <description>Recent content in Blueprints on Pete Dimitrov&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 25 Sep 2023 16:46:00 +0000</lastBuildDate><atom:link href="https://petedimitrovart.com/tags/blueprints/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Vortex VFX Tutorial - Index</title>
        <link>https://petedimitrovart.com/p/vortexvfxindex/</link>
        <pubDate>Mon, 25 Sep 2023 16:46:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/vortexvfxindex/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/vortexvfxindex/vortexvfx-c.png" alt="Featured image of post Vortex VFX Tutorial - Index" /&gt;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;In this tutorial series, we will create a vortex VFX basin in Unreal 5. We will go to the creation of geometry, textures and shaders needed for it. Finally we will take a look at blueprints and how to use them to improve the efficiency of our game assets.&lt;/p&gt;
&lt;p&gt;This tutorial is in 5 parts. This blog page will index those pages and list them for an easier look at all of it.&lt;/p&gt;
&lt;h2 id=&#34;videos-preview&#34;&gt;Videos Preview&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/4y6RyrYRb0o&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above, showcasing the final vortex VFX we will be creating.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/mFvhWQ9ot0M&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above. Shows the VFX basin duplicated three times. One is blue, the other is purple, the last one is green.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;page-links&#34;&gt;Page Links&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-005-tut01/&#34;  title=&#34;index.md&#34;
    &gt;Part One - Let&amp;rsquo;s make a liquid magic VFX Vortex. Creating the static geometry.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;  title=&#34;index.md&#34;
    &gt;Part Two - Creating textures for the liquid VFX vortex. Substance Designer work.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;  title=&#34;index.md&#34;
    &gt;Part Three - Making polar coordinates shader in UE5. Circular distortion shader.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-008-tut04/&#34;  title=&#34;index.md&#34;
    &gt;Part Four - Creating refraction shader in UE5. Adding it as a layer of detail on the vortex.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/&#34;  title=&#34;index.md&#34;
    &gt;Part Five - Improving the efficiency of our work through blueprints and construction scripts.&lt;/a&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Software:&lt;/p&gt;
    &lt;p&gt;The tutorial covers Unreal Engine 5, Blender, Substance Designer. You could follow along using Maya and Unreal Engine 4 for replacements.&lt;/p&gt;
    &lt;/div&gt;
&lt;h2 id=&#34;page-cards&#34;&gt;Page Cards&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Alternatively, click on these preview cards to go to each part of the tutorial.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-005-tut01/&#34;&gt;&lt;img src=&#34;vortexvfx01.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 05 - Vortex VFX Tutorial - Part One&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;&gt;&lt;img src=&#34;vortexvfx02.png&#34; alt=&#34;Another Link card image. This one reads - The Amarantos Ritual - 06 - Vortex VFX Tutorial - Part Two&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;&gt;&lt;img src=&#34;vortexvfx03.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 07 - Vortex VFX Tutorial - Part Three&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-008-tut04/&#34;&gt;&lt;img src=&#34;vortexvfx04.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 08 - Vortex VFX Tutorial - Part Four&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/&#34;&gt;&lt;img src=&#34;vortexvfx05.png&#34; alt=&#34;Link card image. Says - The Amarantos Ritual - 09 - Vortex VFX Tutorial - Part Five&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;buy-the-asset&#34;&gt;Buy the Asset&lt;/h2&gt;
&lt;p&gt;If you like the vortex VFX asset, you could purchase the game assets here. It includes the geometry, the textures and shaders of it. I have also spread all of it in an example Unreal 5 level where the basin can be seen in use and colored in different hues.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/s/1e9696c777&#34;&gt;&lt;img src=&#34;https://petedimitrovart.com/vfxvortexkofi2.jpg&#34; alt=&#34;Image link button showing 3 vfx vortex basins. Blue, purple and green one. Text on top reads Click here to buy the UE5 assets for this VFX over at Ko-fi.&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;p&gt;Pete.&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        <item>
        <title>The Amarantos Ritual - 09 - Vortex VFX Tutorial - Part Five (Optional)</title>
        <link>https://petedimitrovart.com/p/amarantos-009-tut05/</link>
        <pubDate>Wed, 20 Sep 2023 19:28:00 +0000</pubDate>
        
        <guid>https://petedimitrovart.com/p/amarantos-009-tut05/</guid>
        <description>&lt;img src="https://petedimitrovart.com/p/amarantos-009-tut05/amarantos182-c.jpg" alt="Featured image of post The Amarantos Ritual - 09 - Vortex VFX Tutorial - Part Five (Optional)" /&gt;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Lets use a Blueprint Actor with extended Construction Script logic in order to improve our work practices.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We have went through all four previous entries of this tutorial series. We have created the geometry, textures and then shaders necessary for getting the nice visual end result. We could leave it there. The VFX vision is accomplished.&lt;/p&gt;
&lt;p&gt;However, there is one final, optional step I wanted to run you through. It&amp;rsquo;s the set up of a custom Blueprint Actor and a few lines of Construction Script node logic.&lt;/p&gt;
&lt;p&gt;If you would like to remind yourself of the previous tutorial steps, you can do so over here:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-005-tut01/&#34;  title=&#34;index.md&#34;
    &gt;Part One - Creating Static Geometry&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;  title=&#34;index.md&#34;
    &gt;Part Two - Creating Textures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;  title=&#34;index.md&#34;
    &gt;Part Three - Making Polar Coordinates Shader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-007-tut03/&#34;  title=&#34;index.md&#34;
    &gt;Part Four - Adding Refraction Shader and Assembling The Final VFX&lt;/a&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Tip:&lt;/p&gt;
    &lt;p&gt;As in all parts of this tutorial series, I am working in UE5.3. If you are inside UE4, you can still follow along and should not have any issues replicating any part.&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;If you are happy with what you have, you can skip this final part. If you want to learn more about Blueprints and Unreal, stick around.&lt;/p&gt;
&lt;p&gt;Here is a reminded of what we have accomplished so far:&lt;/p&gt;
&lt;h2 id=&#34;videos-preview&#34;&gt;Videos Preview&lt;/h2&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/4y6RyrYRb0o&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above, showcasing the final vortex VFX we will be creating.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/mFvhWQ9ot0M&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Youtube embedded video above. Shows the VFX basin duplicated three times. One is blue, the other is purple, the last one is green.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I like the visual result and the set up of our work so far. The VFX vortex basin looks cool. It looks how we wanted it. I have a &amp;ldquo;problem&amp;rdquo; with a part of its set up that has nothing to do with the visuals though. I say &amp;ldquo;problem&amp;rdquo; because its not a large issue per se.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s more about efficiency than about any &lt;em&gt;&amp;ldquo;problem&amp;rdquo;&lt;/em&gt;. There is an overall lack of efficiency that shows up in a few ways. Lets look over it.&lt;/p&gt;
&lt;h3 id=&#34;not-bundled&#34;&gt;Not Bundled&lt;/h3&gt;
&lt;p&gt;For a started, our VFX basin is composed of four pieces:&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
  &lt;li&gt;Static vortex mesh with base color.&lt;/li&gt;
  &lt;li&gt;Static vortex mesh copy with refraction.&lt;/li&gt;
  &lt;li&gt;Middle small static mesh plane to fix imperfection.&lt;/li&gt;
  &lt;li&gt;Cylinder static mesh frame.&lt;/li&gt;
&lt;/ol&gt; 
&lt;p&gt;As such whenever I want to copy my visual into a new level, or make a duplicate in the existing level, I have to select all one by one, as seen in the image below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos149.jpg&#34;
	width=&#34;1716&#34;
	height=&#34;982&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 5 screenshot of a scene. Four static meshes - plane, two vfx vortex basins and a cylinder are selected. That can be seen in the Hierarchy view on the right of the screen, where the pieces are selected in blue highlighter.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;174&#34;
		data-flex-basis=&#34;419px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Lets imagine a hypothetical situation where this asset is used in a full production game, where lots of artist work on the game. First, selecting one by one four assets, whenever you want to move things around is inefficient. Second, having to &amp;ldquo;instruct&amp;rdquo; and have other artists remember about your edge case VFX where its split into four pieces is also quite inefficient.&lt;/p&gt;
&lt;p&gt;There is a solution to that. It is to turn the four pieces into a bundle. Into a Blueprint Actor. We will do that and cover the necessary steps. Any artist, designer or a programmer that later on has to work with this VFX basin, add functionality or do tweaks, will be thankful to us for bundling it properly into an actor.&lt;/p&gt;
&lt;h3 id=&#34;hard-to-change-color&#34;&gt;Hard to Change Color&lt;/h3&gt;
&lt;p&gt;If you remember from the previous steps, we made our main material shader so we can tint the VFX into any color we like. That is the reason why in &lt;a class=&#34;link&#34; href=&#34;https://petedimitrovart.com/p/amarantos-006-tut02/&#34;  title=&#34;index.md&#34;
    &gt;part two&lt;/a&gt; of the tutorial series we left the &amp;ldquo;albedo&amp;rdquo; liquid-spill texture black and white - so we could tint it in engine.&lt;/p&gt;
&lt;p&gt;As such, lets imagine another hypothetical situation with a game in full production. Let us say that this VFX basin is used as a portal or as some fundamental for gameplay function. As such it will exist everywhere. Lots of copies in each world. Also lets say that for visual variety, or even better, for design functionality, we have created a big array of lots of colored versions of this VFX basin. Its not going to be just blue, purple and green like the previews above.&lt;/p&gt;
&lt;p&gt;Instead its going to be blue, purple, green, violet, pink, red, yellow, cyan, a shade of black, a shade of white, and more. Also lets imagine that new artists or designers joining might want newer shades of colors, so they suddenly create even more. Our Content Browser ends up like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos150.jpg&#34;
	width=&#34;1603&#34;
	height=&#34;412&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot from the Content Drawer (project directory) of UE5. 9 files are visible which have similar icons but are all different colors. Those are 9 copies of the same material instance - the polar coordinates from the previous blog parts - tinted in all kinds of hues.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;389&#34;
		data-flex-basis=&#34;933px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I had the patience to make only 9 material instances to illustrate this point. But imagine there being 18, or 25 or even 30 material instances. Believe me, I&amp;rsquo;ve seen productions at previous game dev jobs I&amp;rsquo;ve had where this thing happens. I didn&amp;rsquo;t name the instances properly either - instead of having a color in the name, they just go _Inst1&amp;hellip;Inst2&amp;hellip;InstN. and I&amp;rsquo;ve seen that in studios out there too &lt;em&gt;(make sure to always name things properly)&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;In order to make something more efficient and eliminate the two issues above, we can create a Blueprint Actor. In it, all static meshes will be into a collection, which fixes problem one. Then in the Construction Script of the blueprint, we can use few nodes of logic in order to make it so we have exposed and customizable color per blueprint actor instance once placed in the world.&lt;/p&gt;
&lt;p&gt;We will end up with this.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos151.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Unreal 5 blueprint actor inspection screen image. In the middle, in the 3D viewport, we can see the VFX basin meshes. If we look at the left side of the screen, we can see all 4 static meshes are listed. If we look at the right side, we will see a &amp;ldquo;Base Color&amp;rdquo; tinted in blue. That controls the color per actor instance basis, dynamically.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;blueprint-actor&#34;&gt;Blueprint Actor&lt;/h2&gt;
&lt;p&gt;In your project directory, make a folder called &amp;ldquo;Blueprints&amp;rdquo;. Inside of it, right click to create a new asset. Under &amp;ldquo;Create Basic Asset&amp;rdquo;, select &amp;ldquo;Blueprint Class&amp;rdquo;. In the window that pops up, select the top option button, called &amp;ldquo;Actor&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos152.jpg&#34;
	width=&#34;984&#34;
	height=&#34;869&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Two UE5 screenshots put next to one another. First one is context menu for creating new asset, with the &amp;ldquo;Blueprint Class&amp;rdquo; blue icon circled. Second is the window that pops up on the screen after clicking on the context menu. Its a list with common type of blueprint classes. The top one, &amp;ldquo;Actor&amp;rdquo; is circle, thats the one we want to create.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;271px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;For a name of your Blueprint go for something easy to understand and follow like &lt;em&gt;&amp;ldquo;BP_vortex_basin&amp;rdquo;&lt;/em&gt;. Open the newly created blueprint.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos153.jpg&#34;
	width=&#34;1916&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot showing the newly created blueprint open. It sits empty and most of the menus have nothing in them. There is a blueprint billboard in the middle.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;adding-components&#34;&gt;Adding Components&lt;/h3&gt;
&lt;p&gt;Find the static mesh you created in the first part of this tutorial series. From the &amp;ldquo;Content Drawer&amp;rdquo; drag it into the Blueprint.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos154.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1152&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE5 blueprint screenshot. Yellow arrow points where to drag the static mesh from the project into the blueprint.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select the newly added mesh. On the right hand side panel, first change the &amp;ldquo;Mobility&amp;rdquo; from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo;. Then click on the Material and find your vortex material instance, the one that has default white color tint on it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos155.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another UE5 screenshot. This one shows changing the mobility of the asset and changing the material from the gray one to a black and white polar coordinates one.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;With mobility set to static from the previous step, we can now click and hold the mesh on the left hand side of the screen and then drag it on top of &amp;ldquo;DefaultSceneRoot&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos156.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1148&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot showing selecting and dragging the static mesh of the vortex, in the hierarchy list of the blueprint on the left. The mesh is dragged on top of its parent that goes by the name &amp;ldquo;DefaultSceneRoot&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The end result is this where we have no &amp;ldquo;DefaultSceneRoot&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos157.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Imagine pointing at the left side hierarchy list of the blueprint. There is now no &amp;ldquo;DefaultSceneRoot&amp;rdquo;. Instead the mesh replaced it.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select &amp;ldquo;SM_Basin_Tutorial1&amp;rdquo; (your top asset in the hierarchy to the left, the name might be different for you). Copy and paste it (do so by pressing CTRL + C and then CTRL + V immediately, while hovering the mouse over the hierarchy window oon the left). Select the second, new copy, in the hierarchy. Change its Z position to 4 by using the Details panel to the right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos158.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot looking at the hierarchy (Components) window to the left. It shows copying the basin static mesh to get a secondary copy. After selecting it, an arrow points on the right Details panel where we change the Z (blue axis) position value from 0 to 4.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;rename&#34;&gt;Rename&lt;/h3&gt;
&lt;p&gt;Rename your top asset to &amp;ldquo;SM_polar_vortex&amp;rdquo;. The child component (asset) under, rename to &amp;ldquo;SM_refraction_basin&amp;rdquo;. Select the refraction mesh and change its material to your transparent, refraction one from the previous part in this tutorial series.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos159.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1147&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another UE5 screenshot that shows us selecting the top asset on the left window and renaming it. Then selecting the child under it and renaming that too. From the right side panel, we change the Material of the child actor to a refraction material. Yellow text and the renames are transcribed in the paragraph above.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Click the &amp;ldquo;Add&amp;rdquo; button below the &amp;ldquo;Components&amp;rdquo; in the top left corner. Select &amp;ldquo;Plane&amp;rdquo; from the &amp;ldquo;Add&amp;rdquo; subcontext menu. Drag the plane to be under &amp;ldquo;SM_polar_vortex&amp;rdquo;. Change its Z location setting to &amp;ldquo;5&amp;rdquo;. For its &amp;ldquo;Mobility&amp;rdquo; change from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo; as per usual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos160.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image showing zoomed in look at the vortex basin. There is a new plane added right in the middle, that has white placeholder material. Arrows run us through clicking on &amp;ldquo;Add&amp;rdquo; on left top corner. Then dragging the newly added plane to the correct place and finally changing its settings.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Rename your &amp;ldquo;Plane&amp;rdquo; to &amp;ldquo;SM_plane_polar&amp;rdquo;. Set its material to be the black and white polar one (identical to our SM_polar_vortex).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos161.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Same zoomed image as before but now the white plane in the middle has the same polar coordinates gray material as the mesh around it. Arrows point to changing the name of the plane and then to changing its material on the right side of the UI.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Drag in your cylinder frame mesh &lt;em&gt;(I do this by dragging the file from the project Content Drawer and onto the BP here)&lt;/em&gt;. Position it so it fits well. Set it to &amp;ldquo;Static&amp;rdquo; as usual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos162.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Shot looking at the blueprints component a bit from a far. Now there is a cylinder frame encompassing the polar vortex. Arrow on the left shows where we place this new component. Arrow on the right shows where to change from &amp;ldquo;Movable&amp;rdquo; to &amp;ldquo;Static&amp;rdquo; mobility setting.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;construction-script&#34;&gt;Construction Script&lt;/h2&gt;
&lt;p&gt;Double click on the &amp;ldquo;ConstructionScript&amp;rdquo; function that is listed in the image seen below &lt;em&gt;(yellow arrow points at it)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos163.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1149&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another image looking at the blueprint viewport. Arrow points to a &amp;ldquo;FUNCTIONS&amp;rdquo; tab that is expanded. In it there is &amp;ldquo;ConstructionScript&amp;rdquo; that is double clicked.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After double clicking on the &amp;ldquo;ConstructionScript&amp;rdquo; seen in the previous image, a new tab opens. If we want to go back on the top part of the screen, there is a tab called &amp;ldquo;Viewport&amp;rdquo; &lt;em&gt;(we are not going back now, just saying)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos164.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Newly opened construction scrip tab inside the blueprint. Shows a mostly empty nodes board on which there is only a purple construction script node. Arrows point at the UI elements for changing between the different blueprint tabs.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;On the left side, there is a category called &amp;ldquo;Components&amp;rdquo;. Expand it. Inside you will see the collection of &amp;ldquo;SM_&amp;rdquo; pieces you have in the blueprint.&lt;/p&gt;
&lt;p&gt;Start by dragging &amp;ldquo;SM_plane_polar&amp;rdquo; onto the board. Context menu with &amp;ldquo;Get&amp;rdquo; and &amp;ldquo;Set&amp;rdquo; shows up after you drag. Select &amp;ldquo;Get&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos165.jpg&#34;
	width=&#34;1918&#34;
	height=&#34;1153&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image pointing at where to look for the &amp;ldquo;SM_plane_polar&amp;rdquo; component and how to drag it, then opening a new little sub context menu with &amp;ldquo;Get&amp;rdquo; and &amp;ldquo;Set&amp;rdquo;. &amp;ldquo;Get SM_plane_polar&amp;rdquo; is selected (colored in blue).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;399px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The previous step adds this node on the board, seen below - blue tinted &amp;ldquo;SM Plane Polar&amp;rdquo; named on. Repeat the same step but now drag &amp;ldquo;SM_Polar_Vortex&amp;rdquo; component from the left menu. Add it to the board.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos166.jpg&#34;
	width=&#34;1919&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot showing what we added from the last step - a blue node. Then an arrow points to the left hand side where we drag another component onto the board and we get a second blue node, below the previous one. This second one is called &amp;ldquo;SM Polar Vortex&amp;rdquo;. &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;set-vector-parameter&#34;&gt;Set Vector Parameter&lt;/h3&gt;
&lt;p&gt;Start dragging the pin out of &amp;ldquo;SM Plane Polar&amp;rdquo; blue node. Let go and this search seen below will appear. Type in &amp;ldquo;set vector parameter&amp;rdquo; and select &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo; that will appear in the list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos167.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Imagine showcasing dragging out of the blue top pin. A long list opens with a search on the top. In that search we&amp;rsquo;ve typed &amp;ldquo;set vector parameter&amp;rdquo; and right by the end of the list, partially in green highlighter color, &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo; shows up. Image shows us clicking on it to add it.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This large node shows up &lt;em&gt;(seen below)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos168.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot showing the purple construction script node. On its right there is now a new, large node, added from last step. That node reads &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo; and has a &amp;ldquo;Target&amp;rdquo; connected to one of our blue pins.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Connect the purple node to the &amp;ldquo;Set Vector&amp;rdquo; blue one &lt;em&gt;(I&amp;rsquo;ve highlighted it in yellow, broken line below)&lt;/em&gt;. Connect &amp;ldquo;SM Polar Vortex&amp;rdquo; into &amp;ldquo;Target&amp;rdquo; of &amp;ldquo;Sec Vector&amp;rdquo; node. Change &amp;ldquo;Parameter Name&amp;rdquo; on the &amp;ldquo;Set Vector&amp;rdquo; large node from &amp;ldquo;None&amp;rdquo; to &amp;ldquo;Base Tint&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;We didn&amp;rsquo;t make up this name. Instead we took it from our parent material.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos169.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1151&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image showing us connecting the left side, purple, construction script node into the large, &amp;ldquo;Set Vector&amp;rdquo; node. Then an arrows points on connecting the node called &amp;ldquo;SM Polar Vortex&amp;rdquo; into &amp;ldquo;Target&amp;rdquo; input of &amp;ldquo;Set Vector&amp;rdquo; large node. An arrow next to a warning sign then shows to change &amp;ldquo;Parameter Name&amp;rdquo; to &amp;ldquo;Base Tint&amp;rdquo;. The warning is transcribed in the sentences above this image.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This image below is a reminder that if we go back to our parent material, inside of it we have a &amp;ldquo;Vector 4&amp;rdquo; parameter called &amp;ldquo;Base Tint&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos170.jpg&#34;
	width=&#34;1886&#34;
	height=&#34;1025&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot back from a Material Editor Graph of a parent material. In the middle we can see a color node &amp;ldquo;vector 4&amp;rdquo;. The name on it is &amp;ldquo;Base Tint&amp;rdquo;. This image is taken from the tutorial part that covered making the polar coordinates parent material.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;441px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In our material instance that we edit through the construction script, we can also see our &amp;ldquo;Base Tint&amp;rdquo; parameter. In fact any of the &amp;ldquo;Scalar Parameters&amp;rdquo; or the &amp;ldquo;Vector Parameters&amp;rdquo; seen in here, we could edit, if we wanted to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos171.jpg&#34;
	width=&#34;1915&#34;
	height=&#34;1115&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot, this time with a &amp;ldquo;Material Instance&amp;rdquo; asset open. On the left we see a ball shader preview. On the right we see a list of parameters. Text is transcribed above.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;We do that by using these two nodes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos172.jpg&#34;
	width=&#34;1134&#34;
	height=&#34;771&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Blueprints screenshot that showcases the two mostly common used nodes for dynamically editing parameters of materials. Top one is called &amp;ldquo;Set Vector Parameter Value on Materials&amp;rdquo;. Bottom one is called &amp;ldquo;Set Scalar Parameter Value on Materials&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;352px&#34;
	
&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock error&#34;&gt;
    &lt;p&gt;Note:&lt;/p&gt;
    &lt;p&gt;From all of the descriptions and material vs construction script images you see above, you hopefully learned that we need to be careful and track exactly how we name our parameters inside of the material graph. We then use the names inside of our new blueprints, as exactly seen over in the material. If in your material you named your Base Tint to something different, then don&amp;#39;t copy that name from me, instead use the name you came up with back when you were making your material shader.&lt;/p&gt;
    &lt;/div&gt;
&lt;h3 id=&#34;new-variable&#34;&gt;New Variable&lt;/h3&gt;
&lt;p&gt;With all pins connected and with the &amp;ldquo;Parameter Name&amp;rdquo; of the &amp;ldquo;Set Vector&amp;rdquo; node put correctly, now lets create a new Blueprint Variable.&lt;/p&gt;
&lt;p&gt;Click on the (+) sign seen below to add a new variable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos173.jpg&#34;
	width=&#34;1919&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;We are back to the blueprint construction scrip board and this image showcases it. An arrow to the left points at a plus sign next to &amp;ldquo;VARIABLES&amp;rdquo;. Clicking it starts making a new variable that by default has red color that indicates a Boolean type.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The newly created variable, name &amp;ldquo;BaseColor&amp;rdquo;. You can do so by selecting the &amp;ldquo;NewVar&amp;rdquo; red boolean and then changing its name on the panel in the right hand side. From &amp;ldquo;Variable Type&amp;rdquo; over in that corner, search for &amp;ldquo;Linear Color&amp;rdquo; and set it to that. The red boolean indicator will turn into a dark blue Linear Color indicator. From the settings over there also turn on &amp;ldquo;Instance Editable&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Instance Editable turned on, in the settings there, is very important as that is what will let us change the color when we drag a blueprint instance in the open world.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos174.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1152&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UE5 screenshot that has an arrow pointing to the right hand panel. In that side are lots of settings like variable name, variable type, and others. We tweak those as described above.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Drag &amp;ldquo;BaseColor&amp;rdquo; from the left side onto the board. From the context menu that shows and asks if you want to &amp;ldquo;Get&amp;rdquo; or &amp;ldquo;Set&amp;rdquo; the Base Color, pick &amp;ldquo;Get. The node seen below will show up. Connect Base Color node pin into &amp;ldquo;Parameter Value&amp;rdquo; of &amp;ldquo;Set Vector Parameter Value on Material&amp;rdquo; node seen below. It will do a conversion for us &lt;em&gt;(seen in the picture after the next one)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos175.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1152&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot that shows the result of Base Color dragged onto the board - a dark blue Base Color pin shows up. The image then shows us dragging its pin out and connecting it into the &amp;ldquo;Parameter Value&amp;rdquo; of &amp;ldquo;Set Vector&amp;rdquo; large node. With that a little text appears, with a red and blue icon, that says &amp;ldquo;Convert Linear Color Structure to Vector&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Everything should look like above after the new conversion pin &lt;em&gt;(the one going from dark blue to dark orange and then connecting into &amp;ldquo;Parameter Value&amp;rdquo;)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos176.jpg&#34;
	width=&#34;1920&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Blueprint board screenshot that shows our nodes work so far. Our dark blue node called Base Color connects into a dark orange conversion node that has no name visually. That then connects into Parameter Value of the large node &amp;ldquo;Set Vector Parameter&amp;hellip;&amp;rdquo;.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;div class =&#34;colorblock info&#34;&gt;
    &lt;p&gt;Tip:&lt;/p&gt;
    &lt;p&gt;When we made our variable, instead of going for Linear Color we could have gone for Vector 3. That Vector 3 would have technically been a color - one with no alpha of course - that then directly connects above without needing a conversion node. When exposed, the Vector 3 would have X, Y and Z value and would not give us interface with a color picker, which is not ideal. Us using a Linear Color structure instead and then converting it to Vector 3 allows us to have a nice color picker which makes it more artist / user friendly. We will see that picker in action in a few pictures down this blog post.&lt;/p&gt;
    &lt;/div&gt;
&lt;p&gt;Select the &amp;ldquo;BaseColor&amp;rdquo; from here (&lt;em&gt;the left side panel)&lt;/em&gt; again. Click on the black box on the right side panel to change the default color. I put mine to blue. That color picked seen here would not have worked had we not done it the way the green &amp;ldquo;Tip&amp;rdquo; box above describes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos177.jpg&#34;
	width=&#34;1917&#34;
	height=&#34;1150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another screenshot that now shows the Base Color selected and its right hand side settings change. The black box there is clicked and then change to a bright blue color, using a color picker seen in the image.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;We are done with the Blueprint set up!&lt;/p&gt;
&lt;h2 id=&#34;in-a-level&#34;&gt;In A Level&lt;/h2&gt;
&lt;p&gt;Drag our newly finished blueprint into the scene. It looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos178.jpg&#34;
	width=&#34;1908&#34;
	height=&#34;1014&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot that shows a viewport looking at a blank UE5 level that comes with the default skybox, volumetric clouds and a plane with checkerboard material. In one corner, closest to the camera we have dragged in our newly created blueprint. It looks like a blue vortex.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;451px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Now duplicate the newly placed blue vortex blueprint. Move it to the side. From the right &amp;ldquo;Details&amp;rdquo; menu of UE5 change the color &lt;em&gt;(this is the Base Color variable that we implemented)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos179.jpg&#34;
	width=&#34;1913&#34;
	height=&#34;1043&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image that has identical to before subject and angle. Now next to the blue vortex blueprint that is out in the world, there is a secondary one. This secondary one has its Base Color blueprint variable changed to a pink, red color. That is reflected in the world too, where the material instance used on that dynamically has changed to the same shade of red.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;440px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Duplicate your blueprint as many times. Set as many different colors you want. All of the materials are dynamic and are saved inside the level itself. As such our Project Directory is tidy and not overflowed with lots of material instances.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos180.jpg&#34;
	width=&#34;1209&#34;
	height=&#34;904&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Another UE5 blank level screenshot. Angle is same as before but now most of the before empty space is occupied by many vortex basins. There are blue, red, purple, green, yellow, white, teal and many more colors.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;color-previews&#34;&gt;Color Previews&lt;/h2&gt;
&lt;p&gt;Here is one final view of our work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://petedimitrovart.com/p/amarantos-009-tut05/amarantos181.jpg&#34;
	width=&#34;2000&#34;
	height=&#34;1125&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot similar to the previous one but now the camera is slightly from afar and orthographic looking. A line of six colored vortex, all different is put out. On a second line below, five more sit.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this optional part of the VFX tutorial for creating a vortex basin, we looked at Blueprint set ups. We learned how to bundle our few different static meshes so they are more artist friendly and efficient to use. We then looked into using construction script in order to connect a linear color blueprint parameter into the material used on the vortex. That allowed us to efficiently change the color of each unique vortex blueprint instance, once put in the world, without having to make unique material instances in our project directory.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I hope you enjoyed reading and going through this tutorial series. I had a lot of fun putting it together and I sincerely hope it comes to be useful and educational for anyone reading it out there.&lt;/p&gt;
&lt;p&gt;It took me around a month and lots of hours after work to write this all up. It was a lot of effort to create all of the images, annotate them on top step by step, and give them alt text. I think we totalled to around 180 images. As such if you would like to drop a tip over at my Ko-fi page, I would be very grateful. You can find it in the blue badge link below. Alternatively you could purchase the asset itself from my shop.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/s/1e9696c777&#34;&gt;&lt;img src=&#34;https://petedimitrovart.com/vfxvortexkofi2.jpg&#34; alt=&#34;Image link button showing 3 vfx vortex basins. Blue, purple and green one. Text on top reads Click here to buy the UE5 assets for this VFX over at Ko-fi.&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cheers,&lt;/p&gt;
&lt;p&gt;Pete.&lt;/p&gt;
&lt;script type=&#39;text/javascript&#39; src=&#39;https://storage.ko-fi.com/cdn/widget/Widget_2.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;kofiwidget2.init(&#39;If you find my blogs useful, tip me on Ko-fi&#39;, &#39;#428beb&#39;, &#39;W7W4LKBRP&#39;);kofiwidget2.draw();&lt;/script&gt;


</description>
        </item>
        
    </channel>
</rss>
